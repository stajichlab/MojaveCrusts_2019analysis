ps.taxglom.RMC = subset_samples(ps.taxglom, Crust_type=="RMC.Sub")
ps.taxglom.RMC
set.seed(711L)
psplotnet = plot_net(ps.taxglom.RMC, distance = "bray", type = "taxa", laymeth = "circle", color = "Phylum", point_label ="Phylum", hjust = 0.3, maxdist = 0.25) + ggtitle("Biocrust Microbial Community Network Analysis (CLC-Subsurface")  + theme(plot.title = element_text(hjust = 0.5))
df = psplotnet$data
df.v1 = data.frame(OTU1 = df$v1, stringsAsFactors = T )
df.v2 = data.frame(OTU1 = df$v2, stringsAsFactors = T )
df.v1.v2 = rbind(df.v1,df.v2)
cdf = data.frame(OTU1 = df$v1, OTU2 = df$v2, Similarity = as.vector(1-df$Distance), stringsAsFactors = TRUE )
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 3], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 3], Similarity=cdf$Similarity)
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.8)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
set.seed(711L)
psplotnet = plot_net(ps.taxglom.RMC, distance = "bray", type = "taxa", laymeth = "circle", color = "Phylum", point_label ="Phylum", hjust = 0.3, maxdist = 0.28) + ggtitle("Biocrust Microbial Community Network Analysis (CLC-Subsurface")  + theme(plot.title = element_text(hjust = 0.5))
df = psplotnet$data
df.v1 = data.frame(OTU1 = df$v1, stringsAsFactors = T )
df.v2 = data.frame(OTU1 = df$v2, stringsAsFactors = T )
df.v1.v2 = rbind(df.v1,df.v2)
cdf = data.frame(OTU1 = df$v1, OTU2 = df$v2, Similarity = as.vector(1-df$Distance), stringsAsFactors = TRUE )
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 3], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 3], Similarity=cdf$Similarity)
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.8)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
set.seed(711L)
psplotnet = plot_net(ps.taxglom.RMC, distance = "bray", type = "taxa", laymeth = "circle", color = "Phylum", point_label ="Phylum", hjust = 0.3, maxdist = 0.3) + ggtitle("Biocrust Microbial Community Network Analysis (CLC-Subsurface")  + theme(plot.title = element_text(hjust = 0.5))
df = psplotnet$data
df.v1 = data.frame(OTU1 = df$v1, stringsAsFactors = T )
df.v2 = data.frame(OTU1 = df$v2, stringsAsFactors = T )
df.v1.v2 = rbind(df.v1,df.v2)
cdf = data.frame(OTU1 = df$v1, OTU2 = df$v2, Similarity = as.vector(1-df$Distance), stringsAsFactors = TRUE )
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 3], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 3], Similarity=cdf$Similarity)
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.8)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
df = psplotnet$data
df.v1 = data.frame(OTU1 = df$v1, stringsAsFactors = T )
df.v2 = data.frame(OTU1 = df$v2, stringsAsFactors = T )
df.v1.v2 = rbind(df.v1,df.v2)
df.v1.v2
cdf = data.frame(OTU1 = df$v1, OTU2 = df$v2, Similarity = as.vector(1-df$Distance), stringsAsFactors = TRUE )
cdf
set.seed(711L)
psplotnet = plot_net(ps.taxglom.RMC, distance = "bray", type = "taxa", laymeth = "circle", color = "Phylum", point_label ="Phylum", hjust = 0.3, maxdist = 0.4) + ggtitle("Biocrust Microbial Community Network Analysis (CLC-Subsurface")  + theme(plot.title = element_text(hjust = 0.5))
df = psplotnet$data
df.v1 = data.frame(OTU1 = df$v1, stringsAsFactors = T )
df.v2 = data.frame(OTU1 = df$v2, stringsAsFactors = T )
df.v1.v2 = rbind(df.v1,df.v2)
cdf = data.frame(OTU1 = df$v1, OTU2 = df$v2, Similarity = as.vector(1-df$Distance), stringsAsFactors = TRUE )
cdf
set.seed(711L)
psplotnet = plot_net(ps.taxglom.RMC, distance = "bray", type = "taxa", laymeth = "circle", color = "Phylum", point_label ="Phylum", hjust = 0.3, maxdist = 0.2) + ggtitle("Biocrust Microbial Community Network Analysis (CLC-Subsurface")  + theme(plot.title = element_text(hjust = 0.5))
df = psplotnet$data
df.v1 = data.frame(OTU1 = df$v1, stringsAsFactors = T )
df.v2 = data.frame(OTU1 = df$v2, stringsAsFactors = T )
df.v1.v2 = rbind(df.v1,df.v2)
cdf = data.frame(OTU1 = df$v1, OTU2 = df$v2, Similarity = as.vector(1-df$Distance), stringsAsFactors = TRUE )
cdf
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 3], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 3], Similarity=cdf$Similarity)
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.8)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
pdf("Figures/Biocrust Microbial Community Network Analysis RMC Subsurface.pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Microbial Community Network Analysis (RMC-Subsurface)")
circos.clear()
dev.off()
#ps.taxglom.prune = prune_taxa(names(sort(taxa_sums(ps.taxglom), TRUE))[1:10], ps.taxglom)
set.seed(711L)
psplotnet = plot_net(ps.taxglom, distance = "bray", type = "taxa", laymeth = "circle", color = "Phylum", point_label ="Phylum", hjust = 0.3, maxdist = 0.3) + ggtitle("Biocrust Microbial Community Network Analysis")  + theme(plot.title = element_text(hjust = 0.5))
psplotnet
df = psplotnet$data
df.v1 = data.frame(OTU1 = df$v1, stringsAsFactors = T )
df.v2 = data.frame(OTU1 = df$v2, stringsAsFactors = T )
df.v1.v2 = rbind(df.v1,df.v2)
df.v1.v2
tax.circlize <- read.table("FG.BAC.taxonomy.fulldataset.csv", header=T,sep=",")
#tax_filtered <- tax.circlize[tax.circlize$OTU.ID %in% df.v1.v2$OTU1,]
#tax_filtered
tax.circlize
cdf = data.frame(OTU1 = df$v1, OTU2 = df$v2, Similarity = as.vector(1-df$Distance), stringsAsFactors = TRUE )
cdf
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 3], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 3], Similarity=cdf$Similarity)
cdf.w.tax
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.75)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
pdf("Figures/Biocrust Microbial Community Network Analysis Surface.pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.75)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Microbial Community Network Analysis (Surface)")
circos.clear()
dev.off()
ps.taxglom.LAC = subset_samples(ps.taxglom, Crust_type=="LAC")
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",header=TRUE,row.names=1,sep="\t",stringsAsFactors=FALSE)
meta <- meta[which(meta$Layer %in% c("Surface")),]
sampleData <- sample_data(meta)
otus <- read.table("MC2018FG.BAC.otu_table.csv",header=T,sep=",",row.names=1)
otumat <- as(as.matrix(otus), "matrix")
OTU = otu_table(otumat, taxa_are_rows = TRUE)
taxmat <- read.table("FG.BAC.taxonomy.fulldataset.csv", header=T,sep=",",row.names=1)
taxmat <- as(as.matrix(taxmat),"matrix")
TAX = tax_table(taxmat)
physeq = phyloseq(OTU,TAX,sampleData)
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 1, physeq)
physeq.prune
physeq.prune.kingdom = tax_glom(physeq.prune, taxrank = "Kingdom")
tax_table(physeq.prune.kingdom)
physeq.prune = subset_taxa(physeq.prune, Kingdom != "Rhizaria")
physeq.prune = subset_taxa(physeq.prune, Kingdom != "Chromista")
physeq.prune = subset_taxa(physeq.prune, Kingdom != "Unassigned")
physeq.prune = subset_taxa(physeq.prune, Kingdom != "D_0__Eukaryota")
physeq.prune
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(711)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 76043, replace = FALSE, trimOTUs = TRUE)
physeq.prune.rarefy
transform.physeq.prune.rarefy = transform_sample_counts(physeq.prune.rarefy, function(abund) 1*(abund>0))
transform.physeq.prune.rarefy
ps.taxglom = tax_glom(transform.physeq.prune.rarefy, taxrank="Phylum")
ps.taxglom
head(tax_table(ps.taxglom))
#ps.taxglom.prune = prune_taxa(names(sort(taxa_sums(ps.taxglom), TRUE))[1:10], ps.taxglom)
set.seed(711L)
psplotnet = plot_net(ps.taxglom, distance = "bray", type = "taxa", laymeth = "circle", color = "Phylum", point_label ="Phylum", hjust = 0.3, maxdist = 0.3) + ggtitle("Biocrust Microbial Community Network Analysis")  + theme(plot.title = element_text(hjust = 0.5))
psplotnet
df = psplotnet$data
df.v1 = data.frame(OTU1 = df$v1, stringsAsFactors = T )
df.v2 = data.frame(OTU1 = df$v2, stringsAsFactors = T )
df.v1.v2 = rbind(df.v1,df.v2)
df.v1.v2
tax.circlize <- read.table("FG.BAC.taxonomy.fulldataset.csv", header=T,sep=",")
#tax_filtered <- tax.circlize[tax.circlize$OTU.ID %in% df.v1.v2$OTU1,]
#tax_filtered
tax.circlize
cdf = data.frame(OTU1 = df$v1, OTU2 = df$v2, Similarity = as.vector(1-df$Distance), stringsAsFactors = TRUE )
cdf
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 3], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 3], Similarity=cdf$Similarity)
cdf.w.tax
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.75)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
pdf("Figures/Biocrust Microbial Community Network Analysis Surface.pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.75)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Microbial Community Network Analysis (Surface)")
circos.clear()
dev.off()
ps.taxglom.LAC = subset_samples(ps.taxglom, Crust_type=="LAC")
ps.taxglom.LAC
set.seed(711L)
psplotnet = plot_net(ps.taxglom.LAC, distance = "bray", type = "taxa", laymeth = "circle", color = "Phylum", point_label ="Phylum", hjust = 0.3, maxdist = 0.25) + ggtitle("Biocrust Microbial Community Network Analysis (LAC-surface")  + theme(plot.title = element_text(hjust = 0.5))
psplotnet
df = psplotnet$data
df.v1 = data.frame(OTU1 = df$v1, stringsAsFactors = T )
df.v2 = data.frame(OTU1 = df$v2, stringsAsFactors = T )
df.v1.v2 = rbind(df.v1,df.v2)
df.v1.v2
cdf = data.frame(OTU1 = df$v1, OTU2 = df$v2, Similarity = as.vector(1-df$Distance), stringsAsFactors = TRUE )
cdf
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 3], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 3], Similarity=cdf$Similarity)
cdf.w.tax
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.8)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
pdf("Figures/Biocrust Microbial Community Network Analysis LAC surface.pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.8)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Microbial Community Network Analysis (LAC-Surface)")
circos.clear()
dev.off()
ps.taxglom.CLC = subset_samples(ps.taxglom, Crust_type=="CLC")
ps.taxglom.CLC
set.seed(711L)
psplotnet = plot_net(ps.taxglom.CLC, distance = "bray", type = "taxa", laymeth = "circle", color = "Phylum", point_label ="Phylum", hjust = 0.3, maxdist = 0.25) + ggtitle("Biocrust Microbial Community Network Analysis (CLC-surface")  + theme(plot.title = element_text(hjust = 0.5))
df = psplotnet$data
df.v1 = data.frame(OTU1 = df$v1, stringsAsFactors = T )
df.v2 = data.frame(OTU1 = df$v2, stringsAsFactors = T )
df.v1.v2 = rbind(df.v1,df.v2)
cdf = data.frame(OTU1 = df$v1, OTU2 = df$v2, Similarity = as.vector(1-df$Distance), stringsAsFactors = TRUE )
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 3], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 3], Similarity=cdf$Similarity)
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.8)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
pdf("Figures/Biocrust Microbial Community Network Analysis CLC surface.pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.8)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Microbial Community Network Analysis (CLC-Surface)")
circos.clear()
dev.off()
ps.taxglom.GLC = subset_samples(ps.taxglom, Crust_type=="GLC")
ps.taxglom.GLC
set.seed(711L)
psplotnet = plot_net(ps.taxglom.GLC, distance = "bray", type = "taxa", laymeth = "circle", color = "Phylum", point_label ="Phylum", hjust = 0.3, maxdist = 0.25) + ggtitle("Biocrust Microbial Community Network Analysis (CLC-surface")  + theme(plot.title = element_text(hjust = 0.5))
df = psplotnet$data
df.v1 = data.frame(OTU1 = df$v1, stringsAsFactors = T )
df.v2 = data.frame(OTU1 = df$v2, stringsAsFactors = T )
df.v1.v2 = rbind(df.v1,df.v2)
cdf = data.frame(OTU1 = df$v1, OTU2 = df$v2, Similarity = as.vector(1-df$Distance), stringsAsFactors = TRUE )
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 3], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 3], Similarity=cdf$Similarity)
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.8)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
pdf("Figures/Biocrust Microbial Community Network Analysis GLC surface.pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.8)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Microbial Community Network Analysis (GLC-Surface)")
circos.clear()
dev.off()
ps.taxglom.SMC = subset_samples(ps.taxglom, Crust_type=="SMC")
ps.taxglom.SMC
set.seed(711L)
psplotnet = plot_net(ps.taxglom.SMC, distance = "bray", type = "taxa", laymeth = "circle", color = "Phylum", point_label ="Phylum", hjust = 0.3, maxdist = 0.25) + ggtitle("Biocrust Microbial Community Network Analysis (CLC-surface")  + theme(plot.title = element_text(hjust = 0.5))
df = psplotnet$data
df.v1 = data.frame(OTU1 = df$v1, stringsAsFactors = T )
df.v2 = data.frame(OTU1 = df$v2, stringsAsFactors = T )
df.v1.v2 = rbind(df.v1,df.v2)
cdf = data.frame(OTU1 = df$v1, OTU2 = df$v2, Similarity = as.vector(1-df$Distance), stringsAsFactors = TRUE )
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 3], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 3], Similarity=cdf$Similarity)
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.8)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
pdf("Figures/Biocrust Microbial Community Network Analysis SMC surface.pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.8)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Microbial Community Network Analysis (SMC-Surface)")
circos.clear()
dev.off()
ps.taxglom.RMC = subset_samples(ps.taxglom, Crust_type=="RMC")
ps.taxglom.RMC
set.seed(711L)
psplotnet = plot_net(ps.taxglom.RMC, distance = "bray", type = "taxa", laymeth = "circle", color = "Phylum", point_label ="Phylum", hjust = 0.3, maxdist = 0.25) + ggtitle("Biocrust Microbial Community Network Analysis (CLC-surface")  + theme(plot.title = element_text(hjust = 0.5))
df = psplotnet$data
df.v1 = data.frame(OTU1 = df$v1, stringsAsFactors = T )
df.v2 = data.frame(OTU1 = df$v2, stringsAsFactors = T )
df.v1.v2 = rbind(df.v1,df.v2)
cdf = data.frame(OTU1 = df$v1, OTU2 = df$v2, Similarity = as.vector(1-df$Distance), stringsAsFactors = TRUE )
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 3], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 3], Similarity=cdf$Similarity)
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.8)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
pdf("Figures/Biocrust Microbial Community Network Analysis RMC surface.pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.8)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Microbial Community Network Analysis (RMC-Surface)")
circos.clear()
dev.off()
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(vegan)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(magrittr)
library(ggplot2)
library(ggpubr)
library(plyr)
library(circlize)
library(data.table)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",header=TRUE,row.names=1,sep="\t",stringsAsFactors=FALSE)
meta <- meta[which(meta$Layer %in% c("Surface")),]
sampleData <- sample_data(meta)
otus <- read.table("MC2018FG.BAC.otu_table.csv",header=T,sep=",",row.names=1)
otumat <- as(as.matrix(otus), "matrix")
OTU = otu_table(otumat, taxa_are_rows = TRUE)
taxmat <- read.table("FG.BAC.taxonomy.fulldataset.csv", header=T,sep=",",row.names=1)
taxmat <- as(as.matrix(taxmat),"matrix")
TAX = tax_table(taxmat)
physeq = phyloseq(OTU,TAX,sampleData)
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 1, physeq)
physeq.prune
physeq.prune.kingdom = tax_glom(physeq.prune, taxrank = "Kingdom")
tax_table(physeq.prune.kingdom)
physeq.prune = subset_taxa(physeq.prune, Kingdom != "Rhizaria")
physeq.prune = subset_taxa(physeq.prune, Kingdom != "Chromista")
physeq.prune = subset_taxa(physeq.prune, Kingdom != "Unassigned")
physeq.prune = subset_taxa(physeq.prune, Kingdom != "D_0__Eukaryota")
physeq.prune
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(711)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 76043, replace = FALSE, trimOTUs = TRUE)
physeq.prune.rarefy
transform.physeq.prune.rarefy = transform_sample_counts(physeq.prune.rarefy, function(abund) 1*(abund>0))
transform.physeq.prune.rarefy
ps.taxglom = tax_glom(transform.physeq.prune.rarefy, taxrank="Phylum")
ps.taxglom
head(tax_table(ps.taxglom))
#ps.taxglom.prune = prune_taxa(names(sort(taxa_sums(ps.taxglom), TRUE))[1:10], ps.taxglom)
set.seed(711L)
psplotnet = plot_net(ps.taxglom, distance = "bray", type = "taxa", laymeth = "circle", color = "Phylum", point_label ="Phylum", hjust = 0.3, maxdist = 0.3) + ggtitle("Biocrust Microbial Community Network Analysis")  + theme(plot.title = element_text(hjust = 0.5))
psplotnet
df = psplotnet$data
df.v1 = data.frame(OTU1 = df$v1, stringsAsFactors = T )
df.v2 = data.frame(OTU1 = df$v2, stringsAsFactors = T )
df.v1.v2 = rbind(df.v1,df.v2)
df.v1.v2
tax.circlize <- read.table("FG.BAC.taxonomy.fulldataset.csv", header=T,sep=",")
#tax_filtered <- tax.circlize[tax.circlize$OTU.ID %in% df.v1.v2$OTU1,]
#tax_filtered
tax.circlize
cdf = data.frame(OTU1 = df$v1, OTU2 = df$v2, Similarity = as.vector(1-df$Distance), stringsAsFactors = TRUE )
cdf
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 3], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 3], Similarity=cdf$Similarity)
cdf.w.tax
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.75)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
FG <- read.table("FGoriginalcopy.txt",header=T,sep="\t",row.names=1)
FGtaxmat <- select(FG, Confidence.Ranking, Trophic.Mode, Guild, Growth.Morphology)
FGtaxmat <- as(as.matrix(FGtaxmat),"matrix")
FGTAX = tax_table(FGtaxmat)
#tax.circlize <- read.table("FG.BAC.taxonomy.fulldataset.csv", header=T,sep=",")
#tax_filtered <- tax.circlize[tax.circlize$OTU.ID %in% df.v1.v2$OTU1,]
#tax_filtered
head(FGTAX)
head(FGtaxmat)
FG <- read.table("FGoriginalcopy.txt",header=T,sep="\t")
FGtaxmat <- select(FG, Confidence.Ranking, Trophic.Mode, Guild, Growth.Morphology)
FGtaxmat <- as(as.matrix(FGtaxmat),"matrix")
FGTAX = tax_table(FGtaxmat)
#tax.circlize <- read.table("FG.BAC.taxonomy.fulldataset.csv", header=T,sep=",")
#tax_filtered <- tax.circlize[tax.circlize$OTU.ID %in% df.v1.v2$OTU1,]
#tax_filtered
head(FGtaxmat)
FG <- read.table("FGoriginalcopy.txt",header=T,sep="\t",row.names=1)
FGtaxmat <- select(FG, Confidence.Ranking, Trophic.Mode, Guild, Growth.Morphology)
FGtaxmat <- as(as.matrix(FGtaxmat),"matrix")
FGTAX = tax_table(FGtaxmat)
#tax.circlize <- read.table("FG.BAC.taxonomy.fulldataset.csv", header=T,sep=",")
#tax_filtered <- tax.circlize[tax.circlize$OTU.ID %in% df.v1.v2$OTU1,]
#tax_filtered
head(FGtaxmat)
head(FG)
FG <- read.table("FGoriginalcopy.txt",header=T,sep="\t")
FGtaxmat <- select(FG, Confidence.Ranking, Trophic.Mode, Guild, Growth.Morphology)
FGtaxmat <- as(as.matrix(FGtaxmat),"matrix")
FGTAX = tax_table(FGtaxmat)
#tax.circlize <- read.table("FG.BAC.taxonomy.fulldataset.csv", header=T,sep=",")
#tax_filtered <- tax.circlize[tax.circlize$OTU.ID %in% df.v1.v2$OTU1,]
#tax_filtered
head(FG)
FG <- read.table("FGoriginalcopy.txt",header=T,sep="\t")
FGtaxmat <- select(FG, OTU.ID, Confidence.Ranking, Trophic.Mode, Guild, Growth.Morphology)
#FGtaxmat <- as(as.matrix(FGtaxmat),"matrix")
#FGTAX = tax_table(FGtaxmat)
#tax.circlize <- read.table("FG.BAC.taxonomy.fulldataset.csv", header=T,sep=",")
#tax_filtered <- tax.circlize[tax.circlize$OTU.ID %in% df.v1.v2$OTU1,]
#tax_filtered
head(FGtaxmat)
FunGuild.circlize <- read.table("FGuilds.BAC.taxonomy.csv", header=T,sep=",")
#tax_filtered <- tax.circlize[tax.circlize$OTU.ID %in% df.v1.v2$OTU1,]
#tax_filtered
tail(FunGuild.circlize)
cdf.w.tax.FunGuilds = data.frame(OTU1=FunGuild.circlize[match(cdf$OTU1, FunGuild.circlize$OTU.ID), 3], OTU2=FunGuild.circlize[match(cdf$OTU2, FunGuild.circlize$OTU.ID), 3], Similarity=cdf$Similarity)
cdf.w.tax.FunGuilds
cdf.w.tax.FunGuilds = data.frame(OTU1=FunGuild.circlize[match(cdf$OTU1, FunGuild.circlize$OTU.ID), 2], OTU2=FunGuild.circlize[match(cdf$OTU2, FunGuild.circlize$OTU.ID), 3], Similarity=cdf$Similarity)
cdf.w.tax.FunGuilds
cdf.w.tax.FunGuilds = data.frame(OTU1=FunGuild.circlize[match(cdf$OTU1, FunGuild.circlize$OTU.ID), 2], OTU2=FunGuild.circlize[match(cdf$OTU2, FunGuild.circlize$OTU.ID), 2], Similarity=cdf$Similarity)
cdf.w.tax.FunGuilds
cdf.w.tax.FunGuilds = data.frame(OTU1=FunGuild.circlize[match(cdf$OTU1, FunGuild.circlize$OTU.ID), 3], OTU2=FunGuild.circlize[match(cdf$OTU2, FunGuild.circlize$OTU.ID), 3], Similarity=cdf$Similarity)
cdf.w.tax.FunGuilds
ps.taxglom.CLC = subset_samples(ps.taxglom, Crust_type=="CLC")
ps.taxglom.CLC
set.seed(711L)
psplotnet = plot_net(ps.taxglom.CLC, distance = "bray", type = "taxa", laymeth = "circle", color = "Phylum", point_label ="Phylum", hjust = 0.3, maxdist = 0.25) + ggtitle("Biocrust Microbial Community Network Analysis (CLC-surface")  + theme(plot.title = element_text(hjust = 0.5))
df = psplotnet$data
df.v1 = data.frame(OTU1 = df$v1, stringsAsFactors = T )
df.v2 = data.frame(OTU1 = df$v2, stringsAsFactors = T )
df.v1.v2 = rbind(df.v1,df.v2)
cdf = data.frame(OTU1 = df$v1, OTU2 = df$v2, Similarity = as.vector(1-df$Distance), stringsAsFactors = TRUE )
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 3], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 3], Similarity=cdf$Similarity)
FunGuild.circlize <- read.table("FGuilds.BAC.taxonomy.csv", header=T,sep=",")
cdf.w.tax.FunGuilds = data.frame(OTU1=FunGuild.circlize[match(cdf$OTU1, FunGuild.circlize$OTU.ID), 3], OTU2=FunGuild.circlize[match(cdf$OTU2, FunGuild.circlize$OTU.ID), 3], Similarity=cdf$Similarity)
cdf.w.tax.FunGuilds
