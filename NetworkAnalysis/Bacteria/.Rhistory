knitr::opts_chunk$set(echo = TRUE)
library(circlize)
cdf = read.table("EasiFunBacNet.SF.top200.csv", header=T,sep=",")
head(cdf)
Bac.net.taxmat <- read.table("BAC.network.taxonomy.csv", header=T,sep=",")
Fun.net.taxmat <- read.table("FG.network.taxonomy.csv", header=T,sep=",")
tax.circlize = rbind(Fun.net.taxmat,Bac.net.taxmat)
head(tax.circlize)
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 4], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 4], WEIGHT=cdf$WEIGHT)
cdf.w.tax
cdf.w.tax$OTU1 <- as.character(cdf.w.tax$OTU1)
cdf.w.tax$OTU2 <- as.character(cdf.w.tax$OTU2)
str(cdf.w.tax)
cdf.w.tax[is.na(cdf.w.tax)] <- "unidentified"
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Surface top 200 OTUs).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Surface top 200 OTUs)")
circos.clear()
dev.off()
cdf = read.table("EasiFunBacNet.SF.top100.cross.csv", header=T,sep=",")
head(cdf)
Bac.net.taxmat <- read.table("BAC.network.taxonomy.csv", header=T,sep=",")
Fun.net.taxmat <- read.table("FG.network.taxonomy.csv", header=T,sep=",")
tax.circlize = rbind(Fun.net.taxmat,Bac.net.taxmat)
head(tax.circlize)
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 4], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 4], WEIGHT=cdf$WEIGHT)
cdf.w.tax
cdf.w.tax$OTU1 <- as.character(cdf.w.tax$OTU1)
cdf.w.tax$OTU2 <- as.character(cdf.w.tax$OTU2)
str(cdf.w.tax)
cdf.w.tax[is.na(cdf.w.tax)] <- "unidentified"
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Surface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Surface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Surface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Surface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
cdf = read.table("EasiFunBacNet.SUB.top100.cross.csv", header=T,sep=",")
head(cdf)
Bac.net.taxmat <- read.table("BAC.network.taxonomy.csv", header=T,sep=",")
Fun.net.taxmat <- read.table("FG.network.taxonomy.csv", header=T,sep=",")
tax.circlize = rbind(Fun.net.taxmat,Bac.net.taxmat)
head(tax.circlize)
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 4], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 4], WEIGHT=cdf$WEIGHT)
cdf.w.tax
cdf.w.tax$OTU1 <- as.character(cdf.w.tax$OTU1)
cdf.w.tax$OTU2 <- as.character(cdf.w.tax$OTU2)
str(cdf.w.tax)
cdf.w.tax[is.na(cdf.w.tax)] <- "unidentified"
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
cdf = read.table("EasiFunBacNet.SF.top200.cross.csv", header=T,sep=",")
head(cdf)
Bac.net.taxmat <- read.table("BAC.network.taxonomy.csv", header=T,sep=",")
Fun.net.taxmat <- read.table("FG.network.taxonomy.csv", header=T,sep=",")
tax.circlize = rbind(Fun.net.taxmat,Bac.net.taxmat)
head(tax.circlize)
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 4], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 4], WEIGHT=cdf$WEIGHT)
cdf.w.tax
cdf.w.tax$OTU1 <- as.character(cdf.w.tax$OTU1)
cdf.w.tax$OTU2 <- as.character(cdf.w.tax$OTU2)
str(cdf.w.tax)
cdf.w.tax[is.na(cdf.w.tax)] <- "unidentified"
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 200 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
cdf = read.table("EasiFunBacNet.SF.top100.cross.csv", header=T,sep=",")
head(cdf)
Bac.net.taxmat <- read.table("BAC.network.taxonomy.csv", header=T,sep=",")
Fun.net.taxmat <- read.table("FG.network.taxonomy.csv", header=T,sep=",")
tax.circlize = rbind(Fun.net.taxmat,Bac.net.taxmat)
head(tax.circlize)
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 4], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 4], WEIGHT=cdf$WEIGHT)
cdf.w.tax
cdf.w.tax$OTU1 <- as.character(cdf.w.tax$OTU1)
cdf.w.tax$OTU2 <- as.character(cdf.w.tax$OTU2)
str(cdf.w.tax)
cdf.w.tax[is.na(cdf.w.tax)] <- "unidentified"
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
cdf = read.table("EasiFunBacNet.SUB.top100.cross.csv", header=T,sep=",")
head(cdf)
Bac.net.taxmat <- read.table("BAC.network.taxonomy.csv", header=T,sep=",")
Fun.net.taxmat <- read.table("FG.network.taxonomy.csv", header=T,sep=",")
tax.circlize = rbind(Fun.net.taxmat,Bac.net.taxmat)
head(tax.circlize)
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 4], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 4], WEIGHT=cdf$WEIGHT)
cdf.w.tax
cdf.w.tax$OTU1 <- as.character(cdf.w.tax$OTU1)
cdf.w.tax$OTU2 <- as.character(cdf.w.tax$OTU2)
str(cdf.w.tax)
cdf.w.tax[is.na(cdf.w.tax)] <- "unidentified"
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Subsurface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
cdf = read.table("EasiFunBacNet.SF.top100.cross.csv", header=T,sep=",")
head(cdf)
Bac.net.taxmat <- read.table("BAC.network.taxonomy.csv", header=T,sep=",")
Fun.net.taxmat <- read.table("FG.network.taxonomy.csv", header=T,sep=",")
tax.circlize = rbind(Fun.net.taxmat,Bac.net.taxmat)
head(tax.circlize)
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 4], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 4], WEIGHT=cdf$WEIGHT)
cdf.w.tax
cdf.w.tax$OTU1 <- as.character(cdf.w.tax$OTU1)
cdf.w.tax$OTU2 <- as.character(cdf.w.tax$OTU2)
str(cdf.w.tax)
cdf.w.tax[is.na(cdf.w.tax)] <- "unidentified"
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Surface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
pdf("Figures/Biocrust Fungal-Bacteria Community Network Analysis (Surface top 100 OTUs-cross only).pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Fungal-Bacterial Community Network Analysis (Subsurface top 100 OTUs-cross domain only)")
circos.clear()
dev.off()
