physeq.prune
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(711)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 37435, replace = FALSE, trimOTUs = TRUE)
physeq.prune.rarefy
physeq.prune.rarefy.SF = subset_samples(physeq.prune.rarefy, Layer=="Surface")
library(devtools)
install_github("zdk123/SpiecEasi")
library(SpiecEasi)
library(ape)
library(vegan)
library(plyr)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(magrittr)
library(ggplot2)
library(ggpubr)
library(data.table)
library(tidyr)
library(tidyverse)
library(multcompView)
Bac.otus <- read.table("MojaveBacQ2FWLEsilva515806.otu_table.fix.txt",
header=T,sep="\t",row.names = 1)
Bac.otumat <- as(as.matrix(Bac.otus), "matrix")
Bac.OTU = otu_table(Bac.otumat, taxa_are_rows = TRUE)
Bac.taxmat <- read.csv("taxonomy_phyloseq_fix.csv",
sep=",",row.names=1)
row.names(Bac.taxmat) = Bac.taxmat$OTU.ID
Bac.taxmat <- as(as.matrix(Bac.taxmat),"matrix")
Bac.TAX = tax_table(Bac.taxmat)
Bac.treefile = "tree.nwk"
Bac.tree = read.tree(Bac.treefile)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",
header=TRUE,row.names=1,
sep="\t",stringsAsFactors=FALSE)
sampleData <- sample_data(meta)
Bac.physeq = phyloseq(Bac.OTU,Bac.TAX,sampleData,Bac.tree)
Bac.physeq.prune = prune_taxa(taxa_sums(Bac.physeq) > 5, Bac.physeq)
set.seed(711)
Bac.physeq.prune.rarefy = rarefy_even_depth(Bac.physeq.prune, sample.size = 37435, replace = FALSE, trimOTUs = TRUE)
BAc.physeq.prune.rarefy
set.seed(711)
Bac.physeq.prune.rarefy = rarefy_even_depth(Bac.physeq.prune, sample.size = 37435, replace = FALSE, trimOTUs = TRUE)
Bac.physeq.prune.rarefy
Bac.physeq.prune.rarefy.SF = subset_samples(Bac.physeq.prune.rarefy, Layer=="Surface")
Bac.physeq.prune.rarefy.SUB = subset_samples(Bac.physeq.prune.rarefy, Layer=="Subsurface")
Fun.otus <- read.table("MC2018FC.otu_table.txt",header=T,sep="\t",row.names=1)
Fun.otumat <- as(as.matrix(Fun.otus), "matrix")
Fun.OTU = otu_table(Fun.otumat, taxa_are_rows = TRUE)
Fun.taxmat <- read.table("MC2018FC.taxonomy.fix.txt", header=T,sep="\t",row.names=1)
Fun.taxmat <- as(as.matrix(Fun.taxmat),"matrix")
Fun.TAX = tax_table(Fun.taxmat)
Fun.treefile = "MC2018FC.tree.phy"
Fun.tree = read.tree(Fun.treefile)
Fun.physeq = phyloseq(Fun.OTU,Fun.TAX,sampleData,Fun.tree)
Fun.physeq.prune = prune_taxa(taxa_sums(Fun.physeq) > 1, Fun.physeq)
set.seed(1)
Fun.physeq.prune.rarefy = rarefy_even_depth(Fun.physeq.prune, sample.size = 6842, replace = FALSE, trimOTUs = FALSE)
Fun.physeq.prune.rarefy
Fun.physeq.prune.rarefy.SF = subset_samples(Fun.physeq.prune.rarefy, Layer=="Surface")
Fun.physeq.prune.rarefy.SUB = subset_samples(Fun.physeq.prune.rarefy, Layer=="Subsurface")
se.hmp2 <- spiec.easi(list(Bac.physeq.prune.rarefy.SF, Fun.physeq.prune.rarefy.SF), method='mb', nlambda=40,
lambda.min.ratio=1e-2, pulsar.params = list(thresh = 0.05))
Bac.otus <- read.table("MC2018.network.BAC.otu_table.csv",
header=T,sep=",",row.names = 1)
Bac.otumat <- as(as.matrix(Bac.otus), "matrix")
Bac.OTU = otu_table(Bac.otumat, taxa_are_rows = TRUE)
Bac.taxmat <- read.csv("BAC.network.taxonomy.csv",
sep=",",row.names=1)
row.names(Bac.taxmat) = Bac.taxmat$OTU.ID
Bac.taxmat <- as(as.matrix(Bac.taxmat),"matrix")
Bac.TAX = tax_table(Bac.taxmat)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",
header=TRUE,row.names=1,
sep="\t",stringsAsFactors=FALSE)
sampleData <- sample_data(meta)
Bac.physeq = phyloseq(Bac.OTU,Bac.TAX,sampleData)
Bac.TAX
Bac.taxmat <- read.csv("BAC.network.taxonomy.csv",header=T
sep=",",row.names=1)
Bac.taxmat <- read.csv("BAC.network.taxonomy.csv",header=T,
sep=",",row.names=1)
row.names(Bac.taxmat) = Bac.taxmat$OTU.ID
Bac.taxmat <- as(as.matrix(Bac.taxmat),"matrix")
Bac.TAX = tax_table(Bac.taxmat)
Bac.TAX
Bac.taxmat <- read.table("BAC.network.taxonomy.csv", header=T,sep=",",row.names=1)
Bac.taxmat <- as(as.matrix(Bac.taxmat),"matrix")
Bac.TAX = tax_table(Bac.taxmat)
Bac.physeq = phyloseq(Bac.OTU,Bac.TAX,sampleData)
Bac.physeq.prune = prune_taxa(taxa_sums(Bac.physeq) > 5, Bac.physeq)
set.seed(711)
Bac.physeq.prune.rarefy = rarefy_even_depth(Bac.physeq.prune, sample.size = 37435, replace = FALSE, trimOTUs = TRUE)
Bac.physeq.prune.rarefy
Bac.physeq.prune.rarefy.SF = subset_samples(Bac.physeq.prune.rarefy, Layer=="Surface")
Bac.physeq.prune.rarefy.SUB = subset_samples(Bac.physeq.prune.rarefy, Layer=="Subsurface")
Fun.otus <- read.table("MC2018.network.FG.otu_table.csv",header=T,sep=",",row.names=1)
Fun.otumat <- as(as.matrix(Fun.otus), "matrix")
Fun.OTU = otu_table(Fun.otumat, taxa_are_rows = TRUE)
Fun.taxmat <- read.table("FG.network.taxonomy.csv", header=T,sep=",",row.names=1)
Fun.taxmat <- as(as.matrix(Fun.taxmat),"matrix")
Fun.TAX = tax_table(Fun.taxmat)
Fun.physeq = phyloseq(Fun.OTU,Fun.TAX,sampleData)
Fun.physeq.prune = prune_taxa(taxa_sums(Fun.physeq) > 1, Fun.physeq)
set.seed(1)
Fun.physeq.prune.rarefy = rarefy_even_depth(Fun.physeq.prune, sample.size = 6842, replace = FALSE, trimOTUs = FALSE)
Fun.physeq.prune.rarefy
Fun.physeq.prune.rarefy.SF = subset_samples(Fun.physeq.prune.rarefy, Layer=="Surface")
Fun.physeq.prune.rarefy.SUB = subset_samples(Fun.physeq.prune.rarefy, Layer=="Subsurface")
se.hmp2 <- spiec.easi(list(Bac.physeq.prune.rarefy.SF, Fun.physeq.prune.rarefy.SF), method='mb', nlambda=40,
lambda.min.ratio=1e-2, pulsar.params = list(thresh = 0.05))
se.hmp2 <- spiec.easi(list(Bac.physeq.prune.rarefy.SF, Fun.physeq.prune.rarefy.SF), method='mb', nlambda=40,
lambda.min.ratio=1e-2, pulsar.params = list(thresh = 0.05))
remotes::install_github("microbiome/microbiome")
sessionInfo()
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(vegan)
library(plyr)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(magrittr)
library(ggplot2)
library(ggpubr)
library(data.table)
library(tidyr)
library(tidyverse)
library(multcompView)
library(SpiecEasi)
library(ggnet)
library(intergraph)
library(remotes)
Bac.otus <- read.table("MC2018.network.BAC.otu_table.csv",
header=T,sep=",",row.names = 1)
Bac.otumat <- as(as.matrix(Bac.otus), "matrix")
Bac.OTU = otu_table(Bac.otumat, taxa_are_rows = TRUE)
Bac.taxmat <- read.table("BAC.network.taxonomy.csv", header=T,sep=",",row.names=1)
Bac.taxmat <- as(as.matrix(Bac.taxmat),"matrix")
Bac.TAX = tax_table(Bac.taxmat)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",
header=TRUE,row.names=1,
sep="\t",stringsAsFactors=FALSE)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",
header=TRUE,row.names=1,
sep="\t",stringsAsFactors=FALSE)
sampleData <- sample_data(meta)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",
header=TRUE,row.names=1,
sep="\t",stringsAsFactors=FALSE)
sampleData <- sample_data(meta)
Bac.physeq = phyloseq(Bac.OTU,Bac.TAX,sampleData)
Bac.physeq.prune = prune_taxa(taxa_sums(Bac.physeq) > 5, Bac.physeq)
set.seed(711)
Bac.physeq.prune.rarefy = rarefy_even_depth(Bac.physeq.prune, sample.size = 37435, replace = FALSE, trimOTUs = TRUE)
Bac.physeq.prune.rarefy
Bac.physeq.prune.rarefy.SF = subset_samples(Bac.physeq.prune.rarefy, Layer=="Surface")
Bac.physeq.prune.rarefy.SUB = subset_samples(Bac.physeq.prune.rarefy, Layer=="Subsurface")
Fun.otus <- read.table("MC2018.network.FG.otu_table.csv",header=T,sep=",",row.names=1)
Fun.otumat <- as(as.matrix(Fun.otus), "matrix")
Fun.OTU = otu_table(Fun.otumat, taxa_are_rows = TRUE)
Fun.taxmat <- read.table("FG.network.taxonomy.csv", header=T,sep=",",row.names=1)
Fun.taxmat <- as(as.matrix(Fun.taxmat),"matrix")
Fun.TAX = tax_table(Fun.taxmat)
Fun.physeq = phyloseq(Fun.OTU,Fun.TAX,sampleData)
Fun.physeq.prune = prune_taxa(taxa_sums(Fun.physeq) > 1, Fun.physeq)
set.seed(1)
Fun.physeq.prune.rarefy = rarefy_even_depth(Fun.physeq.prune, sample.size = 6842, replace = FALSE, trimOTUs = FALSE)
Fun.physeq.prune.rarefy
Fun.physeq.prune.rarefy.SF = subset_samples(Fun.physeq.prune.rarefy, Layer=="Surface")
Fun.physeq.prune.rarefy.SUB = subset_samples(Fun.physeq.prune.rarefy, Layer=="Subsurface")
Bac.physeq.prune.rarefy.SF = subset_taxa(Bac.physeq.prune.rarefy.SF, Kingdom != "Rhizaria")
Bac.physeq.prune.rarefy.SF = subset_taxa(Bac.physeq.prune.rarefy.SF, Kingdom != "Chromista")
Bac.physeq.prune.rarefy.SF = subset_taxa(Bac.physeq.prune.rarefy.SF, Kingdom != "Unassigned")
Bac.physeq.prune.rarefy.SF = subset_taxa(Bac.physeq.prune.rarefy.SF, Kingdom != "D_0__Eukaryota")
Bac.physeq.prune.rarefy.SF
Fun.physeq.prune.rarefy.SF = subset_taxa(Fun.physeq.prune.rarefy.SF, Kingdom != "Rhizaria")
Fun.physeq.prune.rarefy.SF = subset_taxa(Fun.physeq.prune.rarefy.SF, Kingdom != "Chromista")
Fun.physeq.prune.rarefy.SF = subset_taxa(Fun.physeq.prune.rarefy.SF, Kingdom != "Unassigned")
Fun.physeq.prune.rarefy.SF = subset_taxa(Fun.physeq.prune.rarefy.SF, Kingdom != "D_0__Eukaryota")
Fun.physeq.prune.rarefy.SF = subset_taxa(Fun.physeq.prune.rarefy.SF, Kingdom != "NA")
Fun.physeq.prune.rarefy.SF
Bac.physeq.prune.rarefy.SF.top100 = prune_taxa(names(sort(taxa_sums(Bac.physeq.prune.rarefy.SF), TRUE))[1:100], Bac.physeq.prune.rarefy.SF)
Fun.physeq.prune.rarefy.SF.top100 = prune_taxa(names(sort(taxa_sums(Fun.physeq.prune.rarefy.SF), TRUE))[1:100], Fun.physeq.prune.rarefy.SF)
pargs <- list(rep.num = 50, seed = 10010, ncores = 4)
FG.Bac.network <- spiec.easi(list(Bac.physeq.prune.rarefy.SF.top100, Fun.physeq.prune.rarefy.SF.top100), method='glasso', nlambda=40,
lambda.min.ratio=1e-2, pulsar.params = pargs)
dtype <- c(rep(1,ntaxa(Bac.physeq.prune.rarefy.SF.top100)), rep(2,ntaxa(Fun.physeq.prune.rarefy.SF.top100)))
plot(adj2igraph(getRefit(FG.Bac.network)), vertex.color=dtype+1, vertex.size=6, vertex.label=NA)
FG.BAC.top100.merged = merge_phyloseq(Bac.physeq.prune.rarefy.SF.top100, Fun.physeq.prune.rarefy.SF.top100)
FG.BAC.top100.merged
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
psplotnet = plot_network(ig2.mb, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Phylum", hjust = 0.5)
psplotnet
stl.mb <- degree.distribution(ig2.mb)
library(igraph)
stl.mb <- degree.distribution(ig2.mb)
plot(0:(length(stl.mb)-1), stl.mb, ylim=c(0,.35), type='b',
ylab="Frequency", xlab="Degree", main="Degree Distributions")
colnames(tax_table(FG.BAC.top100.merged))
otu.c <- t(otu_table(FG.BAC.top100.merged)@.Data)
vsize <- log2(apply(otu.c, 2, mean))
phyla <- map_levels(colnames(otu.c), from = "Species", to = "Phylum", tax_table(FG.BAC.top100.merged))
sessionInfo()
library(devtools)
install_github("microbiome/microbiome")
library(microbiome)
phyla <- map_levels(colnames(otu.c), from = "Species", to = "Phylum", tax_table(FG.BAC.top100.merged))
stool.net <- asNetwork(ig2.mb)
stool.net %v% "Phylum" <- phyla
phyla <- map_levels(colnames(otu.c), from = "Species", to = "Phylum", tax_table(FG.BAC.top100.merged))
stool.net <- asNetwork(ig2.mb)
stool.net %>% "Phylum" <- phyla
mycolors <- scale_color_manual(values = c("#a6cee3", "#1f78b4", "#b2df8a", "#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6","#6a3d9a","#ffff99","#b15928"))
p <- ggnet2(stool.net,
label = TRUE, node.size = "nodesize",
label.size = 2 ) + guides(color=guide_legend(title="Phylum"), size = FALSE)
p
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
psplotnet = plot_network(p, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Phylum", hjust = 0.5)
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
Isolated = which(degree(ig2.mb)==0)
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
Isolated = which(degree(ig2.mb)<=5)
Isolated
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
ig2.mb.copy <- delete.edges(ig2.mb, which(E(sgdf)$weight != 3)-1)
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
ig2.mb.copy <- delete.edges(ig2.mb, which(E(ig2.mb)$weight != 3)-1)
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
ig2.mb.copy <- delete.edges(ig2.mb, which(E(ig2.mb)$weight != 3))
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
ig2.mb.copy <- delete_edges(ig2.mb, which(E(ig2.mb)$weight != 3))
psplotnet = plot_network(G2, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Phylum", hjust = 0.5, degree())
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
ig2.mb.copy <- delete_edges(ig2.mb, which(E(ig2.mb)$weight != 3))
psplotnet = plot_network(ig2.mb.copy, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Phylum", hjust = 0.5, degree())
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
ig2.mb.copy <- delete_edges(ig2.mb, which(E(ig2.mb)$weight == 0))
psplotnet = plot_network(ig2.mb.copy, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Phylum", hjust = 0.5, degree())
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
ig2.mb.copy <- delete_edges(ig2.mb, which(E(ig2.mb)$weight != 0))
psplotnet = plot_network(ig2.mb.copy, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Phylum", hjust = 0.5, degree())
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
ig2.mb.copy <- delete_edges(ig2.mb, which(E(ig2.mb)$weight == 0))
psplotnet = plot_network(ig2.mb.copy, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Phylum", hjust = 0.5, degree())
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
ig2.mb.copy <- delete_edges(ig2.mb, which(E(ig2.mb)$weight == 0)-1)
psplotnet = plot_network(ig2.mb.copy, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Phylum", hjust = 0.5, degree())
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
ig2.mb.copy <- delete_edges(ig2.mb, which(E(ig2.mb)$weight == 0)-1)
psplotnet = plot_network(ig2.mb.copy, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Phylum", hjust = 0.5)
psplotnet
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
ig2.mb.copy <- delete_edges(ig2.mb, which(E(ig2.mb)$weight == 0))
psplotnet = plot_network(ig2.mb.copy, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Phylum", hjust = 0.5)
psplotnet
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
ig2.mb.copy <- delete_edges(ig2.mb, which(E(ig2.mb)$weight <= 5))
psplotnet = plot_network(ig2.mb.copy, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Phylum", hjust = 0.5)
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
ig2.mb.copy <- delete_edges(ig2.mb, E(ig2.mb)$weight <= 5)
psplotnet = plot_network(ig2.mb.copy, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Phylum", hjust = 0.5)
psplotnet
str(ig2.mb)
E(ig2.mb)
E(ig2.mb)$
E(ig2.mb)$weight
ig2.mb$degree
ig2.mb
ig2.mb$edges
ig2.mb
ig2.mb$name
ig2.mb
ig2.mb$vertex
ig2.mb.dl=delete.vertices(ig2.mb,which(degree(ig2.mb)<1))
pdf("Figures/Biocrust Microbial Community Network Analysis Surface test.pdf", width = 18, height = 18)
psplotnet
dev.off()
pdf("Figures/Biocrust Microbial Community Network Analysis Surface test.pdf", width = 8, height = 8)
psplotnet
dev.off()
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
ig2.mb.copy <- delete_edges(ig2.mb, E(ig2.mb)$weight <= 5)
psplotnet = plot_network(ig2.mb.copy, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Genus", hjust = 0.5)
psplotnet
pdf("Figures/Biocrust Microbial Community Network Analysis Surface test.pdf", width = 10, height = 8)
psplotnet
dev.off()
FG.Bac.network
str(FG.Bac.network)
FG.Bac.network$est$path
FG.Bac.network$est$method
FG.Bac.network$est$icov
FG.Bac.network$est$df
FG.Bac.network$est$data
highconfnet <- FG.Bac.network$refit * (FG.Bac.network$merge[[FG.Bac.network$opt.index]] > .9)
highconfnet <- getRefit(FG.Bac.network) * (FG.Bac.network$merge[[FG.Bac.network$opt.index]] > .9)
ig.hc <- graph.adjacency(highconfnet, mode='undirected')
dtype <- c(rep(1,ntaxa(Bac.physeq.prune.rarefy.SF.top100)), rep(2,ntaxa(Fun.physeq.prune.rarefy.SF.top100)))
plot(adj2igraph(getRefit(FG.Bac.network)), vertex.color=dtype+1, vertex.size=6, vertex.label=NA)
dtype <- c(rep(1,ntaxa(Bac.physeq.prune.rarefy.SF.top100)), rep(2,ntaxa(Fun.physeq.prune.rarefy.SF.top100)))
plot(adj2igraph(getRefit(FG.Bac.network)), vertex.color=dtype+1, vertex.size=6, vertex.label=NA, rmEmptyNodes=T)
dtype <- c(rep(1,ntaxa(Bac.physeq.prune.rarefy.SF.top100)), rep(2,ntaxa(Fun.physeq.prune.rarefy.SF.top100)))
plot(adj2igraph(getRefit(FG.Bac.network)), vertex.color=dtype+1, vertex.size=6, vertex.label=NA, rmEmptyNodes=True)
dtype <- c(rep(1,ntaxa(Bac.physeq.prune.rarefy.SF.top100)), rep(2,ntaxa(Fun.physeq.prune.rarefy.SF.top100)))
plot(adj2igraph(getRefit(FG.Bac.network)), vertex.color=dtype+1, vertex.size=6, vertex.label=NA, rmEmptyNodes=TRUE)
dtype <- c(rep(1,ntaxa(Bac.physeq.prune.rarefy.SF.top100)), rep(2,ntaxa(Fun.physeq.prune.rarefy.SF.top100)))
plot(adj2igraph(getRefit(FG.Bac.network)), vertex.color=dtype+1, vertex.size=6, vertex.label=NA, rmEmptyNodes=TRUE)
dtype <- c(rep(1,ntaxa(Bac.physeq.prune.rarefy.SF.top100)), rep(2,ntaxa(Fun.physeq.prune.rarefy.SF.top100)))
plot(adj2igraph(getRefit(FG.Bac.network)), vertex.color=dtype+1, vertex.size=6, vertex.label=NA, rmEmptyNodes=FALSE)
ig.mb <- graph.adjacency(FG.Bac.network$refit, mode='undirected')
dtype <- c(rep(1,ntaxa(Bac.physeq.prune.rarefy.SF.top100)), rep(2,ntaxa(Fun.physeq.prune.rarefy.SF.top100)))
plot(adj2igraph(getRefit(FG.Bac.network)), vertex.color=dtype+1, vertex.size=6, vertex.label=NA, rmEmptyNodes=TRUE)
mycolors <- scale_color_manual(values = c("#a6cee3", "#1f78b4", "#b2df8a", "#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6","#6a3d9a","#ffff99","#b15928"))
p <- ggnet2(stool.net,
label = TRUE, node.size = "nodesize",
label.size = 2 ) + guides(color=guide_legend(title="Phylum"), size = FALSE)
p
str(p)
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
ig2.mb.copy <- delete_edges(ig2.mb, E(ig2.mb)$weight <= 5)
psplotnet = plot_network(ig2.mb.copy, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Genus", hjust = 0.5)
psplotnet + ggnet2(size.min = 5)
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
ig2.mb.copy <- delete_edges(ig2.mb, E(ig2.mb)$weight <= 5)
psplotnet = plot_network(ig2.mb.copy, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Genus", hjust = 0.5)
psplotnet + ggnet2(ig2.mb, size.min = 5)
ggnet2(psplotnet, size.min = 5)
dtype <- c(rep(1,ntaxa(Bac.physeq.prune.rarefy.SF.top100)), rep(2,ntaxa(Fun.physeq.prune.rarefy.SF.top100)))
plot(adj2igraph(getRefit(FG.Bac.network) >=5 ), vertex.color=dtype+1, vertex.size=6, vertex.label=NA, rmEmptyNodes=TRUE)
dtype <- c(rep(1,ntaxa(Bac.physeq.prune.rarefy.SF.top100)), rep(2,ntaxa(Fun.physeq.prune.rarefy.SF.top100)))
plot(adj2igraph(getRefit(FG.Bac.network) >=2 ), vertex.color=dtype+1, vertex.size=6, vertex.label=NA, rmEmptyNodes=TRUE)
dtype <- c(rep(1,ntaxa(Bac.physeq.prune.rarefy.SF.top100)), rep(2,ntaxa(Fun.physeq.prune.rarefy.SF.top100)))
plot(adj2igraph(getRefit(FG.Bac.network) >=0 ), vertex.color=dtype+1, vertex.size=6, vertex.label=NA, rmEmptyNodes=TRUE)
dtype <- c(rep(1,ntaxa(Bac.physeq.prune.rarefy.SF.top100)), rep(2,ntaxa(Fun.physeq.prune.rarefy.SF.top100)))
plot(adj2igraph(getRefit(FG.Bac.network) >=0.2 ), vertex.color=dtype+1, vertex.size=6, vertex.label=NA, rmEmptyNodes=TRUE)
dtype <- c(rep(1,ntaxa(Bac.physeq.prune.rarefy.SF.top100)), rep(2,ntaxa(Fun.physeq.prune.rarefy.SF.top100)))
plot(adj2igraph(getRefit(FG.Bac.network) >=0.1 ), vertex.color=dtype+1, vertex.size=6, vertex.label=NA, rmEmptyNodes=TRUE)
dtype <- c(rep(1,ntaxa(Bac.physeq.prune.rarefy.SF.top100)), rep(2,ntaxa(Fun.physeq.prune.rarefy.SF.top100)))
plot(adj2igraph(getRefit(FG.Bac.network) >=0.15 ), vertex.color=dtype+1, vertex.size=6, vertex.label=NA, rmEmptyNodes=TRUE)
dtype <- c(rep(1,ntaxa(Bac.physeq.prune.rarefy.SF.top100)), rep(2,ntaxa(Fun.physeq.prune.rarefy.SF.top100)))
plot(adj2igraph(getRefit(FG.Bac.network) >=0.18 ), vertex.color=dtype+1, vertex.size=6, vertex.label=NA, rmEmptyNodes=TRUE)
getRefit(FG.Bac.network)
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
ig2.mb.copy <- delete_edges(ig2.mb, E(ig2.mb)$degree <= 5)
psplotnet = plot_network(ig2.mb.copy, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Genus", hjust = 0.5)
psplotnet
ggnet2(ig2.mb, size.min = 5)
ggnet2(ig2.mb, size.min = 8)
ggnet2(ig2.mb, size.min = 10)
ggnet2(ig2.mb, size.min = 9)
stl.mb <- degree.distribution(ig2.mb)
plot(0:(length(stl.mb)-1), stl.mb, ylim=c(0,.35), type='b',
ylab="Frequency", xlab="Degree", main="Degree Distributions")
ggnet2(ig2.mb, size.min = 10)
ggnet2(ig2.mb, size.min = 2)
ggnet2(ig2.mb, size.min = 0)
ggnet2(ig2.mb, size.min = 4)
ggnet2(ig2.mb, size.min = 8)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(vegan)
library(plyr)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(magrittr)
library(ggplot2)
library(ggpubr)
library(data.table)
library(tidyr)
library(tidyverse)
library(multcompView)
library(SpiecEasi)
library(ggnet)
library(intergraph)
library(remotes)
library(igraph)
Bac.otus <- read.table("MC2018.network.BAC.otu_table.csv",
header=T,sep=",",row.names = 1)
Bac.otumat <- as(as.matrix(Bac.otus), "matrix")
Bac.OTU = otu_table(Bac.otumat, taxa_are_rows = TRUE)
Bac.taxmat <- read.table("BAC.network.taxonomy.csv", header=T,sep=",",row.names=1)
Bac.taxmat <- as(as.matrix(Bac.taxmat),"matrix")
Bac.TAX = tax_table(Bac.taxmat)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",
header=TRUE,row.names=1,
sep="\t",stringsAsFactors=FALSE)
sampleData <- sample_data(meta)
Bac.physeq = phyloseq(Bac.OTU,Bac.TAX,sampleData)
Bac.physeq.prune = prune_taxa(taxa_sums(Bac.physeq) > 5, Bac.physeq)
set.seed(711)
Bac.physeq.prune.rarefy = rarefy_even_depth(Bac.physeq.prune, sample.size = 37435, replace = FALSE, trimOTUs = TRUE)
Bac.physeq.prune.rarefy
Bac.physeq.prune.rarefy.SF = subset_samples(Bac.physeq.prune.rarefy, Layer=="Surface")
Bac.physeq.prune.rarefy.SUB = subset_samples(Bac.physeq.prune.rarefy, Layer=="Subsurface")
Fun.otus <- read.table("MC2018.network.FG.otu_table.csv",header=T,sep=",",row.names=1)
Fun.otumat <- as(as.matrix(Fun.otus), "matrix")
Fun.OTU = otu_table(Fun.otumat, taxa_are_rows = TRUE)
Fun.taxmat <- read.table("FG.network.taxonomy.csv", header=T,sep=",",row.names=1)
Fun.taxmat <- as(as.matrix(Fun.taxmat),"matrix")
Fun.TAX = tax_table(Fun.taxmat)
Fun.physeq = phyloseq(Fun.OTU,Fun.TAX,sampleData)
Fun.physeq.prune = prune_taxa(taxa_sums(Fun.physeq) > 1, Fun.physeq)
set.seed(1)
Fun.physeq.prune.rarefy = rarefy_even_depth(Fun.physeq.prune, sample.size = 6842, replace = FALSE, trimOTUs = FALSE)
Fun.physeq.prune.rarefy
Fun.physeq.prune.rarefy.SF = subset_samples(Fun.physeq.prune.rarefy, Layer=="Surface")
Fun.physeq.prune.rarefy.SUB = subset_samples(Fun.physeq.prune.rarefy, Layer=="Subsurface")
Bac.physeq.prune.rarefy.SF = subset_taxa(Bac.physeq.prune.rarefy.SF, Kingdom != "Rhizaria")
Bac.physeq.prune.rarefy.SF = subset_taxa(Bac.physeq.prune.rarefy.SF, Kingdom != "Chromista")
Bac.physeq.prune.rarefy.SF = subset_taxa(Bac.physeq.prune.rarefy.SF, Kingdom != "Unassigned")
Bac.physeq.prune.rarefy.SF = subset_taxa(Bac.physeq.prune.rarefy.SF, Kingdom != "D_0__Eukaryota")
Bac.physeq.prune.rarefy.SF
Fun.physeq.prune.rarefy.SF = subset_taxa(Fun.physeq.prune.rarefy.SF, Kingdom != "Rhizaria")
Fun.physeq.prune.rarefy.SF = subset_taxa(Fun.physeq.prune.rarefy.SF, Kingdom != "Chromista")
Fun.physeq.prune.rarefy.SF = subset_taxa(Fun.physeq.prune.rarefy.SF, Kingdom != "Unassigned")
Fun.physeq.prune.rarefy.SF = subset_taxa(Fun.physeq.prune.rarefy.SF, Kingdom != "D_0__Eukaryota")
Fun.physeq.prune.rarefy.SF = subset_taxa(Fun.physeq.prune.rarefy.SF, Kingdom != "NA")
Fun.physeq.prune.rarefy.SF
Bac.physeq.prune.rarefy.SF.top100 = prune_taxa(names(sort(taxa_sums(Bac.physeq.prune.rarefy.SF), TRUE))[1:50], Bac.physeq.prune.rarefy.SF)
Fun.physeq.prune.rarefy.SF.top100 = prune_taxa(names(sort(taxa_sums(Fun.physeq.prune.rarefy.SF), TRUE))[1:50], Fun.physeq.prune.rarefy.SF)
pargs <- list(rep.num = 50, seed = 10010, ncores = 4)
FG.Bac.network <- spiec.easi(list(Bac.physeq.prune.rarefy.SF.top100, Fun.physeq.prune.rarefy.SF.top100), method='glasso', nlambda=40,
lambda.min.ratio=1e-2, pulsar.params = pargs)
dtype <- c(rep(1,ntaxa(Bac.physeq.prune.rarefy.SF.top100)), rep(2,ntaxa(Fun.physeq.prune.rarefy.SF.top100)))
plot(adj2igraph(getRefit(FG.Bac.network) >=0.18 ), vertex.color=dtype+1, vertex.size=6, vertex.label=NA, rmEmptyNodes=TRUE)
dtype <- c(rep(1,ntaxa(Bac.physeq.prune.rarefy.SF.top100)), rep(2,ntaxa(Fun.physeq.prune.rarefy.SF.top100)))
plot(adj2igraph(getRefit(FG.Bac.network)), vertex.color=dtype+1, vertex.size=6, vertex.label=NA, rmEmptyNodes=TRUE)
FG.BAC.top100.merged = merge_phyloseq(Bac.physeq.prune.rarefy.SF.top100, Fun.physeq.prune.rarefy.SF.top100)
FG.BAC.top100.merged
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
#ig2.mb.copy <- delete_edges(ig2.mb, E(ig2.mb)$degree <= 5)
psplotnet = plot_network(ig2.mb, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Genus", hjust = 0.5)
psplotnet
dtype <- c(rep(1,ntaxa(Bac.physeq.prune.rarefy.SF.top100)), rep(2,ntaxa(Fun.physeq.prune.rarefy.SF.top100)))
plot(adj2igraph(getRefit(FG.Bac.network), rmEmptyNodes=TRUE), vertex.color=dtype+1, vertex.size=6, vertex.label=NA)
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), rmEmptyNodes=TRUE, vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
#ig2.mb.copy <- delete_edges(ig2.mb, E(ig2.mb)$degree <= 5)
psplotnet = plot_network(ig2.mb, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Genus", hjust = 0.5)
psplotnet
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), rmEmptyNodes=TRUE, vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
psplotnet = plot_network(ig2.mb, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Genus", hjust = 0.5, layout.method=layout.circle)
psplotnet
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), rmEmptyNodes=TRUE, vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
psplotnet = plot_network(ig2.mb, FG.BAC.top100.merged, type='taxa', color="Class", label = "Class", hjust = 0.5, layout.method=layout.circle)
psplotnet
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), rmEmptyNodes=TRUE, vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
psplotnet = plot_network(ig2.mb, FG.BAC.top100.merged, type='taxa', color="Kingdom", label = "Class", hjust = 0.5, layout.method=layout.circle)
psplotnet
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), rmEmptyNodes=TRUE, vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
psplotnet = plot_network(ig2.mb, FG.BAC.top100.merged, type='taxa', color="Kingdom", label = "Phylum", hjust = 0.5, layout.method=layout.circle)
psplotnet
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), rmEmptyNodes=TRUE, vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
psplotnet = plot_network(ig2.mb, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Phylum", hjust = 0.5, layout.method=layout.circle)
psplotnet
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), rmEmptyNodes=TRUE, vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
psplotnet = plot_network(ig2.mb, FG.BAC.top100.merged, type='taxa', color="Phylum", shape = "Kingdom", hjust = 0.5, layout.method=layout.circle)
psplotnet
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), rmEmptyNodes=TRUE, vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
psplotnet = plot_network(ig2.mb, FG.BAC.top100.merged, type='taxa', color="Phylum", shape = "Kingdom", label = NULL, hjust = 0.5, layout.method=layout.circle)
psplotnet
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), rmEmptyNodes=TRUE, vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
psplotnet = plot_network(ig2.mb, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Genus",shape = "Kingdom", hjust = 0.5)
psplotnet
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), rmEmptyNodes=TRUE, vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
psplotnet = plot_network(ig2.mb, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Class",shape = "Kingdom", hjust = 0.5)
psplotnet
net.df = as_long_data_frame(ig2.mb)
head(net.df)
net.df
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), rmEmptyNodes=TRUE, vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
psplotnet = plot_network(ig2.mb, FG.BAC.top100.merged, type='taxa', color="Phylum", label = NULL,shape = "Kingdom", hjust = 0.5)
psplotnet
ig2.mb <- adj2igraph(getRefit(FG.Bac.network), rmEmptyNodes=TRUE, vertex.attr=list(name=taxa_names(FG.BAC.top100.merged)))
psplotnet = plot_network(ig2.mb, FG.BAC.top100.merged, type='taxa', color="Phylum", label = "Genus",shape = "Kingdom", hjust = 0.5)
psplotnet
Bac.physeq.prune.rarefy.LAC = subset_samples(Bac.physeq.prune.rarefy.SF, Crust_type=="LAC")
Bac.physeq.prune.rarefy.LAC.Sub = subset_samples(Bac.physeq.prune.rarefy.SUB, Crust_type=="LAC.Sub")
Fun.physeq.prune.rarefy.LAC = subset_samples(Fun.physeq.prune.rarefy.SF, Crust_type=="LAC")
Fun.physeq.prune.rarefy.LAC.Sub = subset_samples(Fun.physeq.prune.rarefy.SUB, Crust_type=="LAC.Sub")
Bac.physeq.prune.rarefy.LAC.top100 = prune_taxa(names(sort(taxa_sums(Bac.physeq.prune.rarefy.LAC), TRUE))[1:50], Bac.physeq.prune.rarefy.LAC)
Fun.physeq.prune.rarefy.LAC.top100 = prune_taxa(names(sort(taxa_sums(Fun.physeq.prune.rarefy.LAC), TRUE))[1:50], Fun.physeq.prune.rarefy.LAC)
FG.BAC.LAC.top100.merged = merge_phyloseq(Bac.physeq.prune.rarefy.LAC.top100, Fun.physeq.prune.rarefy.LAC.top100)
FG.BAC.LAC.top100.merged
otu_table(FG.BAC.LAC.top100.merged)
pargs <- list(rep.num = 50, seed = 10010, ncores = 4)
FG.Bac.network <- spiec.easi(list(Bac.physeq.prune.rarefy.LAC.top100, Fun.physeq.prune.rarefy.LAC.top100), method='glasso', nlambda=40,lambda.min.ratio=1e-2, pulsar.params = pargs)
LAC.network <- adj2igraph(getRefit(FG.Bac.network), rmEmptyNodes=TRUE, vertex.attr=list(name=taxa_names(FG.BAC.LAC.top100.merged)))
psplotnet.LAC = plot_network(LAC.network, FG.BAC.LAC.top100.merged, type='taxa', color="Phylum", shape = "Kingdom", label = NULL, hjust = 0.5, layout.method=layout.circle)
psplotnet.LAC
Bac.physeq.prune.rarefy.LAC.top100 = prune_taxa(names(sort(taxa_sums(Bac.physeq.prune.rarefy.LAC), TRUE))[1:200], Bac.physeq.prune.rarefy.LAC)
Fun.physeq.prune.rarefy.LAC.top100 = prune_taxa(names(sort(taxa_sums(Fun.physeq.prune.rarefy.LAC), TRUE))[1:200], Fun.physeq.prune.rarefy.LAC)
FG.BAC.LAC.top100.merged = merge_phyloseq(Bac.physeq.prune.rarefy.LAC.top100, Fun.physeq.prune.rarefy.LAC.top100)
FG.BAC.LAC.top100.merged
pargs <- list(rep.num = 50, seed = 10010, ncores = 4)
FG.Bac.network <- spiec.easi(list(Bac.physeq.prune.rarefy.LAC.top100, Fun.physeq.prune.rarefy.LAC.top100), method='glasso', nlambda=40,lambda.min.ratio=1e-2, pulsar.params = pargs)
