physeq.prune.rarefy.plot.richness.Site.class
dev.off()
APS = subset_taxa(physeq.prune.rarefy.SF, Class == "Eurotiomycetes")
physeq.prune.rarefy.plot.richness.Site.class = plot_richness(APS, x="Crust_type", color=("Crust_type"), measures=c("Observed")) + geom_boxplot(lwd=0.5) + ggtitle("Eurotiomycetes") + stat_compare_means(method = "anova") + theme(plot.title = element_text(hjust = 0.5)) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_colour_brewer(palette="Set1")
physeq.prune.rarefy.plot.richness.Site.class
pdf("./Figures/FigS2B_Eurotiomycetes.pdf", width = 6, height = 3.8 )
physeq.prune.rarefy.plot.richness.Site.class
dev.off()
APS = subset_taxa(physeq.prune.rarefy.SF, Class == "Sordariomycetes")
physeq.prune.rarefy.plot.richness.Site.class = plot_richness(APS, x="Crust_type", color=("Crust_type"), measures=c("Observed")) + geom_boxplot(lwd=0.5) + ggtitle("Sordariomycetes") + stat_compare_means(method = "anova") + theme(plot.title = element_text(hjust = 0.5)) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_colour_brewer(palette="Set1")
physeq.prune.rarefy.plot.richness.Site.class
pdf("./Figures/FigS2B_Sordariomycetes.pdf", width = 6, height = 3.8 )
physeq.prune.rarefy.plot.richness.Site.class
dev.off()
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(vegan)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(magrittr)
library(ggplot2)
library(ggpubr)
library(plyr)
library(data.table)
library(tidyr)
library(tidyverse)
library(multcompView)
fast_melt = function(physeq){
# supports "naked" otu_table as `physeq` input.
otutab = as(otu_table(physeq), "matrix")
if(!taxa_are_rows(physeq)){otutab <- t(otutab)}
otudt = data.table(otutab, keep.rownames = TRUE)
setnames(otudt, "rn", "taxaID")
# Enforce character taxaID key
otudt[, taxaIDchar := as.character(taxaID)]
otudt[, taxaID := NULL]
setnames(otudt, "taxaIDchar", "taxaID")
# Melt count table
mdt = melt.data.table(otudt,
id.vars = "taxaID",
variable.name = "SampleID",
value.name = "count")
# Remove zeroes, NAs
mdt <- mdt[count > 0][!is.na(count)]
# Calculate relative abundance
mdt[, RelativeAbundance := count / sum(count), by = SampleID]
if(!is.null(tax_table(physeq, errorIfNULL = FALSE))){
# If there is a tax_table, join with it. Otherwise, skip this join.
taxdt = data.table(as(tax_table(physeq, errorIfNULL = TRUE), "matrix"), keep.rownames = TRUE)
setnames(taxdt, "rn", "taxaID")
# Enforce character taxaID key
taxdt[, taxaIDchar := as.character(taxaID)]
taxdt[, taxaID := NULL]
setnames(taxdt, "taxaIDchar", "taxaID")
# Join with tax table
setkey(taxdt, "taxaID")
setkey(mdt, "taxaID")
mdt <- taxdt[mdt]
}
return(mdt)
}
summarize_taxa = function(physeq, Rank, GroupBy = NULL){
Rank <- Rank[1]
if(!Rank %in% rank_names(physeq)){
message("The argument to `Rank` was:\n", Rank,
"\nBut it was not found among taxonomic ranks:\n",
paste0(rank_names(physeq), collapse = ", "), "\n",
"Please check the list shown above and try again.")
}
if(!is.null(GroupBy)){
GroupBy <- GroupBy[1]
if(!GroupBy %in% sample_variables(physeq)){
message("The argument to `GroupBy` was:\n", GroupBy,
"\nBut it was not found among sample variables:\n",
paste0(sample_variables(physeq), collapse = ", "), "\n",
"Please check the list shown above and try again.")
}
}
# Start with fast melt
mdt = fast_melt(physeq)
if(!is.null(GroupBy)){
# Add the variable indicated in `GroupBy`, if provided.
sdt = data.table(SampleID = sample_names(physeq),
var1 = get_variable(physeq, GroupBy))
setnames(sdt, "var1", GroupBy)
# Join
setkey(sdt, SampleID)
setkey(mdt, SampleID)
mdt <- sdt[mdt]
}
# Summarize
Nsamples = nsamples(physeq)
summarydt = mdt[, list(meanRA = sum(RelativeAbundance)/Nsamples,
sdRA = sd(RelativeAbundance),
minRA = min(RelativeAbundance),
maxRA = max(RelativeAbundance)),
by = c(Rank, GroupBy)]
return(summarydt)
}
plot_taxa_summary = function(physeq, Rank, GroupBy = NULL){
# Get taxa summary table
dt1 = summarize_taxa(physeq, Rank = Rank, GroupBy = GroupBy)
# Set factor appropriately for plotting
RankCol = which(colnames(dt1) == Rank)
setorder(dt1, -meanRA)
dt1[, RankFac := factor(dt1[[Rank]],
levels = rev(dt1[[Rank]]))]
dt1[, ebarMax := max(c(0, min(meanRA + sdRA))), by = eval(Rank)]
dt1[, ebarMin := max(c(0, min(meanRA - sdRA))), by = eval(Rank)]
# Set zeroes to one-tenth the smallest value
ebarMinFloor = dt1[(ebarMin > 0), min(ebarMin)]
ebarMinFloor <- ebarMinFloor / 10
dt1[(ebarMin == 0), ebarMin := ebarMinFloor]
pRank = ggplot(dt1, aes(x = meanRA, y = RankFac)) +
scale_x_log10() +
xlab("Mean Relative Abundance") +
ylab(Rank) +
theme_bw()
if(!is.null(GroupBy)){
# pRank <- pRank + facet_wrap(facets = as.formula(paste("~", GroupBy)))
pRank <- pRank + geom_point(mapping = aes_string(colour = GroupBy),
size = 5)
} else {
# Don't include error bars for faceted version
pRank <- pRank + geom_errorbarh(aes(xmax = ebarMax,
xmin = ebarMin))
}
return(pRank)
}
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",header=TRUE,row.names=1,sep="\t",stringsAsFactors=FALSE)
knitr::opts_chunk$set(echo = TRUE)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",header=TRUE,row.names=1,sep="\t",stringsAsFactors=FALSE)
head(meta)
sampleData <- sample_data(meta)
otus <- read.table("MC2018FC.otu_table.txt",header=T,sep="\t",row.names=1)
otumat <- as(as.matrix(otus), "matrix")
OTU = otu_table(otumat, taxa_are_rows = TRUE)
head(OTU)
taxmat <- read.table("MC2018FC.taxonomy.fix.txt", header=T,sep="\t",row.names=1)
taxmat <- as(as.matrix(taxmat),"matrix")
TAX = tax_table(taxmat)
treefile = "MC2018FC.tree.phy"
tree = read.tree(treefile)
physeq = phyloseq(OTU,TAX,sampleData,tree)
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 1, physeq)
physeq.prune
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
head(readcount)
set.seed(1)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 6842, replace = FALSE, trimOTUs = FALSE)
physeq.prune.rarefy
physeq.prune.rarefy = subset_taxa(physeq.prune.rarefy, Kingdom == "Fungi")
physeq.prune.rarefy
tax.bac <- as(tax_table(physeq.prune.rarefy),"matrix")
head(tax.bac)
tax.bac[is.na(tax.bac)] <- "Unknown"
head(tax.bac)
tax.fun <- as(tax_table(physeq.prune.rarefy),"matrix")
head(tax.fun)
tax.fun[is.na(tax.fun)] <- "Unknown"
head(tax.fun)
TAX.fun <- tax_table(tax.fun)
fun.3 <- phyloseq(sample_data(physeq.prune.rarefy),otu_table(physeq.prune.rarefy),TAX.fun)
fun.3
glom.fun <- tax_glom(fun.3,taxrank = "Phylum")
glom.fun
tax_table(glom.fun)
fun.abund <- merge_samples(glom.fun, "Layer")
sample_data(fun.abund)$Layer <- factor(sample_names(fun.abund))
fun.abund = transform_sample_counts(fun.abund, function(x) x / sum(x))
fun.abund
data_glom.fun <- psmelt(fun.abund)
data_glom.fun$Phylum <- as.character(data_glom.fun$Phylum)
data_glom.fun$Phylum[data_glom.fun$Abundance < 0.01] <- "<1% abund."
Count = length(unique(data_glom.fun$Phylum))
Count
Count = length(unique(data_glom.fun$Phylum))
Count
unique((data_glom.bac$Phylum))
unique((data_glom.fun$Phylum))
glom.fun <- tax_glom(fun.3,taxrank = "Class")
glom.fun
tax_table(glom.fun)
fun.abund <- merge_samples(glom.fun, "Layer")
sample_data(fun.abund)$Layer <- factor(sample_names(fun.abund))
fun.abund = transform_sample_counts(fun.abund, function(x) x / sum(x))
fun.abund
data_glom.fun <- psmelt(fun.abund)
data_glom.fun$Phylum <- as.character(data_glom.fun$Class)
fun.abund <- merge_samples(glom.fun, "Layer")
sample_data(fun.abund)$Layer <- factor(sample_names(fun.abund))
fun.abund = transform_sample_counts(fun.abund, function(x) x / sum(x))
fun.abund
data_glom.fun <- psmelt(fun.abund)
data_glom.fun$Class <- as.character(data_glom.fun$Class)
data_glom.fun$Class[data_glom.fun$Abundance < 0.01] <- "<1% abund."
Count = length(unique(data_glom.fun$Class))
Count
unique((data_glom.fun$Class))
data_glom.bac$Class <- factor(data_glom.bac$Class, levels = c("Dothideomycetes","Agaricomycetes","Eurotiomycetes","Sordariomycetes","Unknown","Lecanoromycetes","Leotiomycetes","Pezizomycetes","Mortierellomycetes","Schizosaccharomycetes","<1% abund."))
data_glom.fun$Class <- factor(data_glom.fun$Class, levels = c("Dothideomycetes","Agaricomycetes","Eurotiomycetes","Sordariomycetes","Unknown","Lecanoromycetes","Leotiomycetes","Pezizomycetes","Mortierellomycetes","Schizosaccharomycetes","<1% abund."))
data_glom.fun$Layer = factor(data_glom.fun$Layer, levels = c("Surface","Subsurface"))
# The palette with black:
cbbPalette <- c("#009E73","#999999", "#E69F00", "#56B4E9", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "midnightblue", "lightgreen", "aquamarine4","lavenderblush2","brown", "snow3")
taxcom_layer_pl = ggplot(data = data_glom.fun, mapping = aes_string(x = "Layer" ,y = "Abundance", fill = "Phylum" )) +
geom_bar(stat="identity", position="fill") +
ggtitle("Fungal Taxonomic Composition (Class level) by Layer")+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_fill_manual(values = cbbPalette)
print(taxcom_layer_pl)
# The palette with black:
cbbPalette <- c("#009E73","#999999", "#E69F00", "#56B4E9", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "midnightblue", "lightgreen", "aquamarine4","lavenderblush2","brown", "snow3")
taxcom_layer_pl = ggplot(data = data_glom.fun, mapping = aes_string(x = "Layer" ,y = "Abundance", fill = "Class" )) +
geom_bar(stat="identity", position="fill") +
ggtitle("Fungal Taxonomic Composition (Class level) by Layer")+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_fill_manual(values = cbbPalette)
print(taxcom_layer_pl)
png("./Figures/Fig3A_Fungal_Taxonomic_Composition_(Class_level)_by_Layer_reorder_not_Rainbow.png", units="in", width = 5.8, height = 5.8, res = 300 )
taxcom_layer_pl
dev.off()
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(vegan)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(magrittr)
library(ggplot2)
library(ggpubr)
library(plyr)
library(data.table)
library(tidyr)
library(tidyverse)
library(multcompView)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",header=TRUE,row.names=1,sep="\t",stringsAsFactors=FALSE)
head(meta)
sampleData <- sample_data(meta)
otus <- read.table("MC2018FC.otu_table.txt",header=T,sep="\t",row.names=1)
otumat <- as(as.matrix(otus), "matrix")
OTU = otu_table(otumat, taxa_are_rows = TRUE)
head(OTU)
taxmat <- read.table("MC2018FC.taxonomy.fix.txt", header=T,sep="\t",row.names=1)
taxmat <- as(as.matrix(taxmat),"matrix")
TAX = tax_table(taxmat)
treefile = "MC2018FC.tree.phy"
tree = read.tree(treefile)
physeq = phyloseq(OTU,TAX,sampleData,tree)
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 1, physeq)
physeq.prune
physeq.prune
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(1)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 6842, replace = FALSE, trimOTUs = FALSE)
physeq.prune.rarefy
physeq.prune.rarefy = subset_taxa(physeq.prune.rarefy, Kingdom == "Fungi")
physeq.prune.rarefy
physeq.prune.rarefy.SF = subset_samples(physeq.prune.rarefy, Layer=="Surface")
tax.fun <- as(tax_table(physeq.prune.rarefy.SF),"matrix")
head(tax.fun)
tax.fun[is.na(tax.fun)] <- "Unknown"
head(tax.fun)
tax.fun <- as(tax_table(physeq.prune.rarefy.SF),"matrix")
head(tax.fun)
tax.fun[is.na(tax.fun)] <- "Unknown"
head(tax.fun)
TAX.fun <- tax_table(tax.fun)
fun.3 <- phyloseq(sample_data(physeq.prune.rarefy.SF),otu_table(physeq.prune.rarefy.SF),TAX.fun)
fun.3
glom.fun <- tax_glom(fun.3,taxrank = "Class")
glom.fun
tax_table(glom.fun)
fun.abund <- merge_samples(glom.fun, "Site")
sample_data(fun.abund)$Site <- factor(sample_names(fun.abund))
fun.abund = transform_sample_counts(fun.abund, function(x) x / sum(x))
fun.abund
data_glom.fun <- psmelt(fun.abund)
data_glom.fun$Class <- as.character(data_glom.fun$Class)
data_glom.fun$Class[data_glom.fun$Abundance < 0.01] <- "<1% abund."
Count = length(unique(data_glom.fun$Class))
Count
unique((data_glom.fun$Class))
unique((data_glom.fun$Class))
data_glom.fun$Class <- factor(data_glom.fun$Class, levels = c("Agaricomycetes","Dothideomycetes","Eurotiomycetes","Unknown","Sordariomycetes","Lecanoromycetes","Leotiomycetes","Pezizomycetes","Orbiliomycetes","<1% abund."))
data_glom.fun$Site = factor(data_glom.fun$Site, levels = c("CIMA", "KELSO", "GMT", "JTNP"))
# The palette with black:
cbbPalette <- c("#009E73","#999999", "#E69F00", "#56B4E9", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "midnightblue", "lightgreen", "aquamarine4","lavenderblush2","brown", "snow3")
taxcom_layer_pl = ggplot(data = data_glom.fun, mapping = aes_string(x = "Site" ,y = "Abundance", fill = "Class" )) +
geom_bar(stat="identity", position="fill") +
ggtitle("Fungal Taxonomic Composition (Class level) by Site")+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_fill_manual(values = cbbPalette)
print(taxcom_layer_pl)
png("./Figures/FigS1A_Fungal_Taxonomic_Composition_(Class_level)_by_Site_reorder_not_Rainbow.png", units="in", width = 5.8, height = 5.8, res = 300 )
taxcom_layer_pl
dev.off()
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(vegan)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(magrittr)
library(ggplot2)
library(ggpubr)
library(plyr)
library(data.table)
library(tidyr)
library(tidyverse)
library(multcompView)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",header=TRUE,row.names=1,sep="\t",stringsAsFactors=FALSE)
head(meta)
head(meta)
sampleData <- sample_data(meta)
otus <- read.table("MC2018FC.otu_table.txt",header=T,sep="\t",row.names=1)
otumat <- as(as.matrix(otus), "matrix")
OTU = otu_table(otumat, taxa_are_rows = TRUE)
head(OTU)
taxmat <- read.table("MC2018FC.taxonomy.fix.txt", header=T,sep="\t",row.names=1)
taxmat <- as(as.matrix(taxmat),"matrix")
TAX = tax_table(taxmat)
treefile = "MC2018FC.tree.phy"
tree = read.tree(treefile)
physeq = phyloseq(OTU,TAX,sampleData,tree)
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 1, physeq)
physeq.prune
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(1)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 6842, replace = FALSE, trimOTUs = FALSE)
physeq.prune.rarefy
physeq.prune.rarefy = subset_taxa(physeq.prune.rarefy, Kingdom == "Fungi")
physeq.prune.rarefy
physeq.prune.rarefy.SF = subset_samples(physeq.prune.rarefy, Layer=="Surface")
tax.fun <- as(tax_table(physeq.prune.rarefy.SF),"matrix")
head(tax.fun)
tax.fun[is.na(tax.fun)] <- "Unknown"
head(tax.fun)
TAX.fun <- tax_table(tax.fun)
fun.3 <- phyloseq(sample_data(physeq.prune.rarefy.SF),otu_table(physeq.prune.rarefy.SF),TAX.fun)
fun.3
glom.fun <- tax_glom(fun.3,taxrank = "Class")
glom.fun
tax_table(glom.fun)
fun.abund <- merge_samples(glom.fun, "Crust_type")
sample_data(fun.abund)$Crust_type <- factor(sample_names(fun.abund))
fun.abund = transform_sample_counts(fun.abund, function(x) x / sum(x))
fun.abund
data_glom.fun <- psmelt(fun.abund)
data_glom.fun$Class <- as.character(data_glom.fun$Class)
data_glom.fun$Class[data_glom.fun$Abundance < 0.01] <- "<1% abund."
Count = length(unique(data_glom.fun$Class))
Count
unique((data_glom.fun$Class))
unique((data_glom.fun$Class))
data_glom.fun$Class <- factor(data_glom.fun$Class, levels = c("Dothideomycetes","Agaricomycetes","Eurotiomycetes","Unknown","Sordariomycetes","Lecanoromycetes","Leotiomycetes","Pezizomycetes","<1% abund."))
data_glom.fun$Crust_type = factor(data_glom.fun$Crust_type, levels = c("LAC", "CLC", "GLC", "RMC", "SMC"))
# The palette with black:
cbbPalette <- c("#009E73","#999999", "#E69F00", "#56B4E9", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "midnightblue", "lightgreen", "aquamarine4","lavenderblush2","brown", "snow3")
taxcom_layer_pl = ggplot(data = data_glom.fun, mapping = aes_string(x = "Site" ,y = "Abundance", fill = "Class" )) +
geom_bar(stat="identity", position="fill") +
ggtitle("Fungal Taxonomic Composition (Class level) by Crust type")+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_fill_manual(values = cbbPalette)
print(taxcom_layer_pl)
# The palette with black:
cbbPalette <- c("#009E73","#999999", "#E69F00", "#56B4E9", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "midnightblue", "lightgreen", "aquamarine4","lavenderblush2","brown", "snow3")
taxcom_layer_pl = ggplot(data = data_glom.fun, mapping = aes_string(x = "Crust_type" ,y = "Abundance", fill = "Class" )) +
geom_bar(stat="identity", position="fill") +
ggtitle("Fungal Taxonomic Composition (Class level) by Crust type")+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_fill_manual(values = cbbPalette)
print(taxcom_layer_pl)
png("./Figures/FigS1B_Fungal_Taxonomic_Composition_(Class_level)_by_Crust_type_reorder_not_Rainbow.png", units="in", width = 5.8, height = 5.8, res = 300 )
taxcom_layer_pl
dev.off()
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(vegan)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(magrittr)
library(ggplot2)
library(ggpubr)
library(plyr)
library(data.table)
library(tidyr)
library(tidyverse)
library(multcompView)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",header=TRUE,row.names=1,sep="\t",stringsAsFactors=FALSE)
sampleData <- sample_data(meta)
otus <- read.table("MC2018FC.otu_table.txt",header=T,sep="\t",row.names=1)
otumat <- as(as.matrix(otus), "matrix")
OTU = otu_table(otumat, taxa_are_rows = TRUE)
head(OTU)
taxmat <- read.table("MC2018FC.taxonomy.fix.txt", header=T,sep="\t",row.names=1)
taxmat <- as(as.matrix(taxmat),"matrix")
TAX = tax_table(taxmat)
treefile = "MC2018FC.tree.phy"
tree = read.tree(treefile)
physeq = phyloseq(OTU,TAX,sampleData,tree)
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 1, physeq)
physeq.prune
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(1)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 6842, replace = FALSE, trimOTUs = FALSE)
physeq.prune.rarefy
alpha.diversity = estimate_richness(physeq.prune.rarefy, measures = c("Observed"))
data.anova = cbind(sample_data(physeq.prune.rarefy), alpha.diversity)
physeq.prune.rarefy.anova = aov(Observed ~ Site_layer, data.anova)
summary(physeq.prune.rarefy.anova)
physeq.prune.rarefy.anova.Site.Layer = aov(Observed ~ Site*Layer, data.anova)
summary(physeq.prune.rarefy.anova.Site.Layer)
leveneTest(Observed ~ Crust_type, data = data.anova)
library(car)
leveneTest(Observed ~ Crust_type, data = data.anova)
leveneTest(Observed ~ Site, data = data.anova)
leveneTest(Observed ~ Layer, data = data.anova)
t.test(Observed ~ Layer, data.anova)
alpha.diversity = estimate_richness(physeq.prune.rarefy, measures = c("Observed"))
data.anova = cbind(sample_data(physeq.prune.rarefy), alpha.diversity)
physeq.prune.rarefy.anova = aov(Observed ~ Site_layer, data.anova)
summary(physeq.prune.rarefy.anova)
physeq.prune.rarefy.anova.Site.Layer = aov(Observed ~ Site*Layer, data.anova)
summary(physeq.prune.rarefy.anova.Site.Layer)
t.test(Observed ~ Layer, data.anova)
alpha.diversity = estimate_richness(physeq.prune.rarefy, measures = c("Observed"))
data.anova = cbind(sample_data(physeq.prune.rarefy), alpha.diversity)
t.test(Observed ~ Layer, data.anova)
t.test(Observed ~ Layer, data.anova)
alpha.diversity = estimate_richness(physeq.prune.rarefy, measures = c("Observed"))
data.anova = cbind(sample_data(physeq.prune.rarefy), alpha.diversity)
t.test(Observed ~ Layer, data.anova)
set.seed(1)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 6842, replace = FALSE, trimOTUs = FALSE)
physeq.prune.rarefy
alpha.diversity = estimate_richness(physeq.prune.rarefy, measures = c("Observed"))
data.anova = cbind(sample_data(physeq.prune.rarefy), alpha.diversity)
t.test(Observed ~ Layer, data.anova)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",header=TRUE,row.names=1,sep="\t",stringsAsFactors=FALSE)
sampleData <- sample_data(meta)
otus <- read.table("MC2018FC.otu_table.txt",header=T,sep="\t",row.names=1)
otumat <- as(as.matrix(otus), "matrix")
OTU = otu_table(otumat, taxa_are_rows = TRUE)
taxmat <- read.table("MC2018FC.taxonomy.fix.txt", header=T,sep="\t",row.names=1)
taxmat <- as(as.matrix(taxmat),"matrix")
TAX = tax_table(taxmat)
treefile = "MC2018FC.tree.phy"
tree = read.tree(treefile)
physeq = phyloseq(OTU,TAX,sampleData,tree)
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 1, physeq)
physeq.prune
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(1)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 6842, replace = FALSE, trimOTUs = FALSE)
physeq.prune.rarefy
t.test(Observed ~ Layer, data.anova)
alpha.diversity = estimate_richness(physeq.prune.rarefy, measures = c("Observed"))
data.anova = cbind(sample_data(physeq.prune.rarefy), alpha.diversity)
t.test(Observed ~ Layer, data.anova)
sample_data(physeq.prune.rarefy)$Layer = factor(sample_data(physeq.prune.rarefy)$Layer, levels = c("Surface", "Subsurface"))
physeq.prune.rarefy.plot.richness.Layer = plot_richness(physeq.prune.rarefy, x="Layer", color=("Layer"), measures=c("Observed")) + geom_boxplot(lwd=0.5) + ggtitle("Mojave Biocrust Fungal Alpha Diversity by Layer") + stat_compare_means(method = "t.test", label.y = 350) + theme(plot.title = element_text(hjust = 0.5)) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_colour_brewer(palette="Set1")
physeq.prune.rarefy.plot.richness.Layer
