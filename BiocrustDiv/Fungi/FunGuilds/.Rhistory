knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(vegan)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(magrittr)
library(ggplot2)
library(ggpubr)
library(plyr)
library(data.table)
library(tidyr)
library(tidyverse)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",header=TRUE,row.names=1,sep="\t",stringsAsFactors=FALSE)
head(meta)
head(meta)
sampleData <- sample_data(meta)
FG <- read.table("FGoriginalcopy.txt",header=T,sep="\t",row.names=1)
FGotus <- select(FG, -(Taxonomy:Citation.Source))
FGotumat <- as(as.matrix(FGotus), "matrix")
FGOTU = otu_table(FGotumat, taxa_are_rows = TRUE)
head(FOTU)
head(FGOTU)
FGtaxmat <- select(FG, Confidence.Ranking, Trophic.Mode, Guild, Growth.Morphology)
FGtaxmat <- as(as.matrix(FGtaxmat),"matrix")
FGTAX = tax_table(FGtaxmat)
physeq = phyloseq(FGOTU,FGTAX,sampleData)
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 1, physeq)
physeq.prune
physeq.prune
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(1)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 6758, replace = FALSE, trimOTUs = FALSE)
physeq.prune.rarefy
FungiClass = as.character(get_taxa_unique(physeq.prune.nopossible, "Guild"))
FungiGuild = as.character(get_taxa_unique(physeq.prune.rarefy.nopossible, "Guild"))
physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy, Confidence.Ranking!="Possible")
#fgps.prune.confidence2 = subset_taxa(fgps.prune.confidence1, Confidence.Ranking!="Probable")
#fgps.prune.no.na = subset_taxa(fgps.prune.confidence1, Trophic.Mode!="-")
#fgps.prune.no.null = subset_taxa(fgps.prune.no.na, Guild!="NULL")
FungiGuild = as.character(get_taxa_unique(physeq.prune.rarefy.nopossible, "Guild"))
FungiGuild = FungiGuild[complete.cases(FungiGuild)]
getwd()
FungiGuild
pdf("./Figures/Fungal Class Alpha Diversity (Observed) by Crust type.pdf", width = 8, height = 5 )
pdf("./Figures/Fungal Class Alpha Diversity (Observed) by Crust type.pdf", width = 8, height = 5 )
for (i in FungiGuild) {
APS = subset_taxa(physeq.prune.rarefy.nopossible, Guild == i)
APS.plot = plot_richness(APS, x="Crust_type", color =("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle(i) + stat_compare_means(method = "anova") + theme(plot.title = element_text(hjust = 0.5))
print(APS.plot)
}
pdf("./Figures/Fungal Class Alpha Diversity (Observed) by Crust type.pdf", width = 8, height = 5 )
for (i in FungiGuild) {
APS = subset_taxa(physeq.prune.rarefy.nopossible, Guild == i)
APS.plot = plot_richness(APS, x="Crust_type", color =("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle(i) + stat_compare_means(method = "anova") + theme(plot.title = element_text(hjust = 0.5))
print(APS.plot)
}
dev.off()
physeq.prune
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(1)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 6758, replace = FALSE, trimOTUs = FALSE)
physeq.prune.rarefy
physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy, Confidence.Ranking!="Possible")
#fgps.prune.confidence2 = subset_taxa(fgps.prune.confidence1, Confidence.Ranking!="Probable")
#fgps.prune.no.na = subset_taxa(fgps.prune.confidence1, Trophic.Mode!="-")
#fgps.prune.no.null = subset_taxa(fgps.prune.no.na, Guild!="NULL")
FungiGuild = as.character(get_taxa_unique(physeq.prune.rarefy.nopossible, "Guild"))
FungiGuild = FungiGuild[complete.cases(FungiGuild)]
pdf("./Figures/Fungal Class Alpha Diversity (Observed) by Crust type.pdf", width = 8, height = 5 )
for (i in FungiGuild) {
APS = subset_taxa(physeq.prune.rarefy.nopossible, Guild == i)
APS.plot = plot_richness(APS, x="Crust_type", color =("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle(i) + stat_compare_means(method = "anova") + theme(plot.title = element_text(hjust = 0.5))
print(APS.plot)
}
dev.off()
FungiGuild = as.character(get_taxa_unique(physeq.prune.rarefy.nopossible, "Trophic.Mode"))
FungiGuild = FungiGuild[complete.cases(FungiGuild)]
pdf("./Figures/Fungal Class Alpha Diversity (Observed) by Crust type.pdf", width = 8, height = 5 )
for (i in FungiGuild) {
APS = subset_taxa(physeq.prune.rarefy.nopossible, Guild == i)
APS.plot = plot_richness(APS, x="Crust_type", color =("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle(i) + stat_compare_means(method = "anova") + theme(plot.title = element_text(hjust = 0.5))
print(APS.plot)
}
pdf("./Figures/Fungal Class Alpha Diversity (Observed) by Crust type.pdf", width = 8, height = 5 )
for (i in FungiGuild) {
APS = subset_taxa(physeq.prune.rarefy.nopossible, Trophic.Mode == i)
APS.plot = plot_richness(APS, x="Crust_type", color =("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle(i) + stat_compare_means(method = "anova") + theme(plot.title = element_text(hjust = 0.5))
print(APS.plot)
}
dev.off()
FungiGuild = as.character(get_taxa_unique(physeq.prune.rarefy.nopossible, "Guild"))
FungiGuild = FungiGuild[complete.cases(FungiGuild)]
FungiGuild
taxcom_crusttype = ggplot(data = psmelt(physeq.prune.rarefy.nopossible), mapping = aes_string(x = "Crust_type" ,y = "Abundance", fill = "Class" )) +
geom_bar(stat="identity", position="fill") +
ggtitle("FunGuilds Composition by Crust type")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(taxcom_crusttype)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(vegan)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(magrittr)
library(ggplot2)
library(ggpubr)
library(plyr)
library(data.table)
library(tidyr)
library(tidyverse)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",header=TRUE,row.names=1,sep="\t",stringsAsFactors=FALSE)
head(meta)
sampleData <- sample_data(meta)
FG <- read.table("FGoriginalcopy.txt",header=T,sep="\t",row.names=1)
FGotus <- select(FG, -(Taxonomy:Citation.Source))
FGotumat <- as(as.matrix(FGotus), "matrix")
FGOTU = otu_table(FGotumat, taxa_are_rows = TRUE)
head(FGOTU)
FGtaxmat <- select(FG, Confidence.Ranking, Trophic.Mode, Guild, Growth.Morphology)
FGtaxmat <- as(as.matrix(FGtaxmat),"matrix")
FGTAX = tax_table(FGtaxmat)
physeq = phyloseq(FGOTU,FGTAX,sampleData)
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 10, physeq)
physeq.prune
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(1)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 6664, replace = FALSE, trimOTUs = FALSE)
physeq.prune.rarefy
physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy, Confidence.Ranking!="Possible")
#fgps.prune.confidence2 = subset_taxa(fgps.prune.confidence1, Confidence.Ranking!="Probable")
#fgps.prune.no.na = subset_taxa(fgps.prune.confidence1, Trophic.Mode!="-")
#fgps.prune.no.null = subset_taxa(fgps.prune.no.na, Guild!="NULL")
FungiGuild = as.character(get_taxa_unique(physeq.prune.rarefy.nopossible, "Guild"))
FungiGuild = FungiGuild[complete.cases(FungiGuild)]
taxcom_crusttype = ggplot(data = psmelt(physeq.prune.rarefy.nopossible), mapping = aes_string(x = "Crust_type" ,y = "Abundance", fill = "Guild" )) +
geom_bar(stat="identity", position="fill") +
ggtitle("FunGuilds Composition by Crust type")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(taxcom_crusttype)
pdf("./Figures/FunGuilds Composition by Crust type.pdf", width = 12, height = 8 )
taxcom_crusttype
dev.off()
physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy, Confidence.Ranking!="Possible")
physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy, Confidence.Ranking!="-")
#fgps.prune.confidence2 = subset_taxa(fgps.prune.confidence1, Confidence.Ranking!="Probable")
#fgps.prune.no.na = subset_taxa(fgps.prune.confidence1, Trophic.Mode!="-")
#fgps.prune.no.null = subset_taxa(fgps.prune.no.na, Guild!="NULL")
physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy, Confidence.Ranking!="Possible")
physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy.nopossible, Confidence.Ranking!="-")
#fgps.prune.confidence2 = subset_taxa(fgps.prune.confidence1, Confidence.Ranking!="Probable")
#fgps.prune.no.na = subset_taxa(fgps.prune.confidence1, Trophic.Mode!="-")
#fgps.prune.no.null = subset_taxa(fgps.prune.no.na, Guild!="NULL")
FungiGuild = as.character(get_taxa_unique(physeq.prune.rarefy.nopossible, "Guild"))
FungiGuild = FungiGuild[complete.cases(FungiGuild)]
taxcom_crusttype = ggplot(data = psmelt(physeq.prune.rarefy.nopossible), mapping = aes_string(x = "Crust_type" ,y = "Abundance", fill = "Guild" )) +
geom_bar(stat="identity", position="fill") +
ggtitle("FunGuilds Composition by Crust type")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(taxcom_crusttype)
pdf("./Figures/FunGuilds Composition by Crust type.pdf", width = 18, height = 8 )
taxcom_crusttype
dev.off()
pdf("./Figures/FunGuilds Composition by Crust type.pdf", width = 28, height = 8 )
taxcom_crusttype
dev.off()
pdf("./Figures/FunGuilds Composition by Crust type.pdf", width = 22, height = 8 )
taxcom_crusttype
dev.off()
physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy, Confidence.Ranking!="Possible")
physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy.nopossible, Confidence.Ranking!="-")
physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy.nopossible, Guild!="NULL")
#fgps.prune.confidence2 = subset_taxa(fgps.prune.confidence1, Confidence.Ranking!="Probable")
#fgps.prune.no.na = subset_taxa(fgps.prune.confidence1, Trophic.Mode!="-")
#fgps.prune.no.null = subset_taxa(fgps.prune.no.na, Guild!="NULL")
FungiGuild = as.character(get_taxa_unique(physeq.prune.rarefy.nopossible, "Guild"))
FungiGuild = FungiGuild[complete.cases(FungiGuild)]
taxcom_crusttype = ggplot(data = psmelt(physeq.prune.rarefy.nopossible), mapping = aes_string(x = "Crust_type" ,y = "Abundance", fill = "Guild" )) +
geom_bar(stat="identity", position="fill") +
ggtitle("FunGuilds Composition by Crust type")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(taxcom_crusttype)
pdf("./Figures/FunGuilds Composition by Crust type.pdf", width = 22, height = 8 )
taxcom_crusttype
dev.off()
pdf("./Figures/FunGuilds Composition by Crust type.pdf", width = 18, height = 8 )
taxcom_crusttype
dev.off()
FungiGuild = as.character(get_taxa_unique(physeq.prune.rarefy.nopossible, "Trophic.Mode"))
FungiGuild = FungiGuild[complete.cases(FungiGuild)]
taxcom_crusttype = ggplot(data = psmelt(physeq.prune.rarefy.nopossible), mapping = aes_string(x = "Crust_type" ,y = "Abundance", fill = "Trophic.Mode" )) +
geom_bar(stat="identity", position="fill") +
ggtitle("FunGuilds Composition by Crust type")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(taxcom_crusttype)
taxcom_crusttype = ggplot(data = psmelt(physeq.prune.rarefy.nopossible), mapping = aes_string(x = "Crust_type" ,y = "Abundance", fill = "Trophic.Mode" )) +
geom_bar(stat="identity", position="fill") +
ggtitle("FunGuilds Composition by Crust type")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(taxcom_crusttype)
FungiGuild = as.character(get_taxa_unique(physeq.prune.rarefy.nopossible, "Growth.Morphology"))
FungiGuild = FungiGuild[complete.cases(FungiGuild)]
taxcom_crusttype = ggplot(data = psmelt(physeq.prune.rarefy.nopossible), mapping = aes_string(x = "Crust_type" ,y = "Abundance", fill = "Trophic.Mode" )) +
geom_bar(stat="identity", position="fill") +
ggtitle("FunGuilds Composition by Crust type")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(taxcom_crusttype)
taxcom_crusttype = ggplot(data = psmelt(physeq.prune.rarefy.nopossible), mapping = aes_string(x = "Crust_type" ,y = "Abundance", fill = "Growth.Morphology" )) +
geom_bar(stat="identity", position="fill") +
ggtitle("FunGuilds Composition by Crust type")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(taxcom_crusttype)
physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy, Confidence.Ranking="Highly Possible")
#physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy.nopossible, Confidence.Ranking!="-")
physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy.nopossible, Guild!="NULL")
#fgps.prune.confidence2 = subset_taxa(fgps.prune.confidence1, Confidence.Ranking!="Probable")
#fgps.prune.no.na = subset_taxa(fgps.prune.confidence1, Trophic.Mode!="-")
#fgps.prune.no.null = subset_taxa(fgps.prune.no.na, Guild!="NULL")
FungiGuild = as.character(get_taxa_unique(physeq.prune.rarefy.nopossible, "Growth.Morphology"))
FungiGuild = FungiGuild[complete.cases(FungiGuild)]
taxcom_crusttype = ggplot(data = psmelt(physeq.prune.rarefy.nopossible), mapping = aes_string(x = "Crust_type" ,y = "Abundance", fill = "Growth.Morphology" )) +
geom_bar(stat="identity", position="fill") +
ggtitle("FunGuilds Composition by Crust type")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(taxcom_crusttype)
taxcom_sitelayer = ggplot(data = psmelt(physeq.prune.rarefy.nopossible), mapping = aes_string(x = "Site_layer" ,y = "Abundance", fill = "Guild" )) +
geom_bar(stat="identity", position="fill") +
ggtitle("FunGuilds Composition by Site and Layer")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#print(taxcom_sitelayer)
print(taxcom_sitelayer)
physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy, Confidence.Ranking="Highly Possible")
#physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy.nopossible, Confidence.Ranking!="-")
#physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy.nopossible, Guild!="NULL")
#fgps.prune.confidence2 = subset_taxa(fgps.prune.confidence1, Confidence.Ranking!="Probable")
#fgps.prune.no.na = subset_taxa(fgps.prune.confidence1, Trophic.Mode!="-")
#fgps.prune.no.null = subset_taxa(fgps.prune.no.na, Guild!="NULL")
FungiGuild = as.character(get_taxa_unique(physeq.prune.rarefy.nopossible, "Guild"))
FungiGuild = FungiGuild[complete.cases(FungiGuild)]
pdf("./Figures/Fungal Guilds Alpha Diversity (Observed) by Site and Layer.pdf", width = 8, height = 5 )
for (i in FungiGuild) {
APS = subset_taxa(physeq.prune.rarefy.nopossible, Guild == i)
APS.plot = plot_richness(APS, x="Site_layer", color =("Site_layer"), measures=c("Observed")) + geom_boxplot() + ggtitle(i) + stat_compare_means(method = "anova") + theme(plot.title = element_text(hjust = 0.5))
print(APS.plot)
}
dev.off()
pdf("./Figures/Fungal Guild Alpha Diversity (Observed) by Crust type.pdf", width = 8, height = 5 )
for (i in FungiGuild) {
APS = subset_taxa(physeq.prune.rarefy.nopossible, Guild == i)
APS.plot = plot_richness(APS, x="Crust_type", color =("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle(i) + stat_compare_means(method = "anova") + theme(plot.title = element_text(hjust = 0.5))
print(APS.plot)
}
dev.off()
FungiGuild = as.character(get_taxa_unique(physeq.prune.rarefy.nopossible, "Trophic.Mode"))
FungiGuild = FungiGuild[complete.cases(FungiGuild)]
pdf("./Figures/Fungal Trophic.Mode Alpha Diversity (Observed) by Site and Layer.pdf", width = 8, height = 5 )
for (i in FungiGuild) {
APS = subset_taxa(physeq.prune.rarefy.nopossible, Trophic.Mode == i)
APS.plot = plot_richness(APS, x="Site_layer", color =("Site_layer"), measures=c("Observed")) + geom_boxplot() + ggtitle(i) + stat_compare_means(method = "anova") + theme(plot.title = element_text(hjust = 0.5))
print(APS.plot)
}
dev.off()
pdf("./Figures/Fungal Trophic.Mode Alpha Diversity (Observed) by Crust type.pdf", width = 8, height = 5 )
for (i in FungiGuild) {
APS = subset_taxa(physeq.prune.rarefy.nopossible, Trophic.Mode == i)
APS.plot = plot_richness(APS, x="Crust_type", color =("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle(i) + stat_compare_means(method = "anova") + theme(plot.title = element_text(hjust = 0.5))
print(APS.plot)
}
dev.off()
FungiGuild = as.character(get_taxa_unique(physeq.prune.rarefy.nopossible, "Growth.Morphology"))
FungiGuild = FungiGuild[complete.cases(FungiGuild)]
pdf("./Figures/Fungal Growth.Morphology Alpha Diversity (Observed) by Site and Layer.pdf", width = 8, height = 5 )
for (i in FungiGuild) {
APS = subset_taxa(physeq.prune.rarefy.nopossible, Growth.Morphology == i)
APS.plot = plot_richness(APS, x="Site_layer", color =("Site_layer"), measures=c("Observed")) + geom_boxplot() + ggtitle(i) + stat_compare_means(method = "anova") + theme(plot.title = element_text(hjust = 0.5))
print(APS.plot)
}
dev.off()
pdf("./Figures/Fungal Growth.Morphology Alpha Diversity (Observed) by Crust type.pdf", width = 8, height = 5 )
for (i in FungiGuild) {
APS = subset_taxa(physeq.prune.rarefy.nopossible, Growth.Morphology == i)
APS.plot = plot_richness(APS, x="Crust_type", color =("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle(i) + stat_compare_means(method = "anova") + theme(plot.title = element_text(hjust = 0.5))
print(APS.plot)
}
dev.off()
pdf("./Figures/Fungal Trophic.Mode Alpha Diversity (Observed) by Crust type.pdf", width = 8, height = 5 )
for (i in FungiGuild) {
APS = subset_taxa(physeq.prune.rarefy.nopossible, Trophic.Mode == i)
APS.plot = plot_richness(APS, x="Crust_type", color =("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle(i) + stat_compare_means(method = "anova") + stat_compare_means(aes(label=..p.signif..), method = "t.test", ref.group = ".all.")+ theme(plot.title = element_text(hjust = 0.5))
print(APS.plot)
}
FungiGuild = as.character(get_taxa_unique(physeq.prune.rarefy.nopossible, "Trophic.Mode"))
FungiGuild = FungiGuild[complete.cases(FungiGuild)]
pdf("./Figures/Fungal Trophic.Mode Alpha Diversity (Observed) by Crust type.pdf", width = 8, height = 5 )
for (i in FungiGuild) {
APS = subset_taxa(physeq.prune.rarefy.nopossible, Trophic.Mode == i)
APS.plot = plot_richness(APS, x="Crust_type", color =("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle(i) + stat_compare_means(method = "anova") + stat_compare_means(aes(label=..p.signif..), method = "t.test", ref.group = "NULL")+ theme(plot.title = element_text(hjust = 0.5))
print(APS.plot)
}
dev.off()
pdf("./Figures/Fungal Trophic.Mode Alpha Diversity (Observed) by Crust type.pdf", width = 8, height = 5 )
for (i in FungiGuild) {
APS = subset_taxa(physeq.prune.rarefy.nopossible, Trophic.Mode == i)
APS.plot = plot_richness(APS, x="Crust_type", color =("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle(i) + stat_compare_means(method = "anova") + stat_compare_means(aes(label=..p.signif..), method = "t.test", ref.group = ".all.")+ theme(plot.title = element_text(hjust = 0.5))
print(APS.plot)
}
dev.off()
pdf("./Figures/Fungal Trophic.Mode Alpha Diversity (Observed) by Crust type.pdf", width = 8, height = 5 )
for (i in FungiGuild) {
APS = subset_taxa(physeq.prune.rarefy.nopossible, Trophic.Mode == i)
APS.plot = plot_richness(APS, x="Crust_type", color =("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle(i) + stat_compare_means(method = "anova") + stat_compare_means(aes(label=..p.signif..), method = "t.test", ref.group = ".all.", hide.ns = T)+ theme(plot.title = element_text(hjust = 0.5))
print(APS.plot)
}
dev.off()
taxcom_sitelayer = ggplot(data = psmelt(physeq.prune.rarefy.nopossible), mapping = aes_string(x = "Site_layer" ,y = "Abundance", fill = "Trophic.Mode" )) +
geom_bar(stat="identity", position="fill") +
ggtitle("Fungal Trophoc ModeComposition by Site and Layer")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(taxcom_sitelayer)
taxcom_crusttype = ggplot(data = psmelt(physeq.prune.rarefy.nopossible), mapping = aes_string(x = "Crust_type" ,y = "Abundance", fill = "Trophic.Mode" )) +
geom_bar(stat="identity", position="fill") +
ggtitle("Fungal Trophic Mode Composition by Crust type")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(taxcom_crusttype)
physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy, Confidence.Ranking="Highly Possible")
#physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy.nopossible, Confidence.Ranking!="-")
physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy.nopossible, Trophic.Mode!="-")
#fgps.prune.confidence2 = subset_taxa(fgps.prune.confidence1, Confidence.Ranking!="Probable")
#fgps.prune.no.na = subset_taxa(fgps.prune.confidence1, Trophic.Mode!="-")
#fgps.prune.no.null = subset_taxa(fgps.prune.no.na, Guild!="NULL")
taxcom_crusttype = ggplot(data = psmelt(physeq.prune.rarefy.nopossible), mapping = aes_string(x = "Crust_type" ,y = "Abundance", fill = "Trophic.Mode" )) +
geom_bar(stat="identity", position="fill") +
ggtitle("Fungal Trophic Mode Composition by Crust type")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(taxcom_crusttype)
physeq.prune.rarefy.nopossible
source("https://bioconductor.org/biocLite.R")
biocLite("cpauvert/psadd")
install_github("cpauvert/psadd")
library(devtools)
install_github("cpauvert/psadd")
install.packages("devtools")
library(devtools)
install_github("cpauvert/psadd")
knitr::opts_chunk$set(echo = TRUE)
library(psadd)
library(cpauvert/psadd)
library("cpauvert/psadd"")
library("cpauvert/psadd"")
library("cpauvert/psadd")
plot_pie(physeq)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(vegan)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(magrittr)
library(ggplot2)
library(ggpubr)
library(plyr)
library(data.table)
library(tidyr)
library(tidyverse)
library(psadd)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",header=TRUE,row.names=1,sep="\t",stringsAsFactors=FALSE)
head(meta)
sampleData <- sample_data(meta)
FG <- read.table("FGoriginalcopy.txt",header=T,sep="\t",row.names=1)
FGotus <- select(FG, -(Taxonomy:Citation.Source))
FGotumat <- as(as.matrix(FGotus), "matrix")
FGOTU = otu_table(FGotumat, taxa_are_rows = TRUE)
head(FGOTU)
FGtaxmat <- select(FG, Confidence.Ranking, Trophic.Mode, Guild, Growth.Morphology)
FGtaxmat <- as(as.matrix(FGtaxmat),"matrix")
FGTAX = tax_table(FGtaxmat)
physeq = phyloseq(FGOTU,FGTAX,sampleData)
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 10, physeq)
physeq.prune
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(1)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 6664, replace = FALSE, trimOTUs = FALSE)
physeq.prune.rarefy
physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy, Confidence.Ranking="Highly Possible")
#physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy.nopossible, Confidence.Ranking!="-")
physeq.prune.rarefy.nopossible = subset_taxa(physeq.prune.rarefy.nopossible, Trophic.Mode!="-")
#fgps.prune.confidence2 = subset_taxa(fgps.prune.confidence1, Confidence.Ranking!="Probable")
#fgps.prune.no.na = subset_taxa(fgps.prune.confidence1, Trophic.Mode!="-")
#fgps.prune.no.null = subset_taxa(fgps.prune.no.na, Guild!="NULL")
plot_pie(physeq.prune.rarefy, Functional Guilds, COL.TAXO.=COL.TAXO)
plot_pie(physeq.prune.rarefy, "Functional Guilds", COL.TAXO.=COL.TAXO)
plot_pie(physeq.prune.rarefy, "Functional Guilds", COL.TAXO.=Trophic.Mode,Guild)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(vegan)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(magrittr)
library(ggplot2)
library(ggpubr)
library(plyr)
library(data.table)
library(tidyr)
library(tidyverse)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",header=TRUE,row.names=1,sep="\t",stringsAsFactors=FALSE)
head(meta)
head(meta)
sampleData <- sample_data(meta)
FG <- read.table("FGoriginalcopy.txt",header=T,sep="\t",row.names=1)
FGotus <- select(FG, -(Taxonomy:Citation.Source))
FGotumat <- as(as.matrix(FGotus), "matrix")
FGOTU = otu_table(FGotumat, taxa_are_rows = TRUE)
head(FGOTU)
FGtaxmat <- select(FG, Confidence.Ranking, Trophic.Mode, Guild, Growth.Morphology)
FGtaxmat <- as(as.matrix(FGtaxmat),"matrix")
FGTAX = tax_table(FGtaxmat)
physeq = phyloseq(FGOTU,FGTAX,sampleData)
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 10, physeq)
physeq.prune = prune_taxa(taxa_sums(physeq) > 1, physeq)
physeq.prune
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(1)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 6758, replace = FALSE, trimOTUs = FALSE)
physeq.prune.rarefy
ps.dist = phyloseq::distance(physeq.prune, "unifrac")
ps.dist = phyloseq::distance(physeq.prune, "bray")
adonis(ps.dist ~ Site*Layer*Crust_type, as(sample_data(physeq.prune),"data.frame"))
physeq.prune.x = prune_taxa(taxa_sums(physeq.prune.rarefy) > 10, physeq.prune.rarefy)
#physeq.prune.x.SF = subset_samples(physeq.prune.x, Layer=="Surface")
physeq.prune.x.ord <- ordinate(physeq.prune.x, "PCoA", "bray")
sample_data(physeq.prune.x)$Site = factor(sample_data(physeq.prune.x)$Site, levels = c("JTNP","CIMA", "GMT", "KELSO"))
pssitelayer = plot_ordination(physeq.prune.x, physeq.prune.x.ord, type = "samples", color = "Site", shape = "Layer") + ggtitle("Fungal Beta Diversity (PCoA) by Site") + theme(plot.title = element_text(hjust = 0.5)) + annotate("text", x = -0.2, y = 0.32, label = "PERMANOVA, p = 0.001") + geom_point(size=5) + scale_colour_manual(values = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#CC79A7")) #+ stat_ellipse(geom = "polygon", type = "t", alpha = 1/12, aes(fill = Site_layer))
pssitelayer
physeq.prune.x = prune_taxa(taxa_sums(physeq.prune.rarefy) > 10, physeq.prune.rarefy)
#physeq.prune.x.SF = subset_samples(physeq.prune.x, Layer=="Surface")
physeq.prune.x.ord <- ordinate(physeq.prune.x, "NMDS", "bray")
sample_data(physeq.prune.x)$Site = factor(sample_data(physeq.prune.x)$Site, levels = c("JTNP","CIMA", "GMT", "KELSO"))
pssitelayer = plot_ordination(physeq.prune.x, physeq.prune.x.ord, type = "samples", color = "Site", shape = "Layer") + ggtitle("Fungal Beta Diversity (PCoA) by Site") + theme(plot.title = element_text(hjust = 0.5)) + annotate("text", x = -0.2, y = 0.32, label = "PERMANOVA, p = 0.001") + geom_point(size=5) + scale_colour_manual(values = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#CC79A7")) #+ stat_ellipse(geom = "polygon", type = "t", alpha = 1/12, aes(fill = Site_layer))
pssitelayer
pssitelayer = plot_ordination(physeq.prune.x, physeq.prune.x.ord, type = "taxa", color = "Site", shape = "Layer") + ggtitle("Fungal Beta Diversity (PCoA) by Site") + theme(plot.title = element_text(hjust = 0.5)) + annotate("text", x = -0.2, y = 0.32, label = "PERMANOVA, p = 0.001") + geom_point(size=5) + scale_colour_manual(values = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#CC79A7")) #+ stat_ellipse(geom = "polygon", type = "t", alpha = 1/12, aes(fill = Site_layer))
pssitelayer
pssitelayer = plot_ordination(physeq.prune.x, physeq.prune.x.ord, type = "taxa", color = "Guild") + ggtitle("Fungal Beta Diversity (PCoA) by Site") + theme(plot.title = element_text(hjust = 0.5)) + annotate("text", x = -0.2, y = 0.32, label = "PERMANOVA, p = 0.001") + geom_point(size=5) + scale_colour_manual(values = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#CC79A7")) #+ stat_ellipse(geom = "polygon", type = "t", alpha = 1/12, aes(fill = Site_layer))
pssitelayer
pssitelayer = plot_ordination(physeq.prune.x, physeq.prune.x.ord, type = "taxa", color = "Guild") + ggtitle("Fungal Beta Diversity (PCoA) by Site") + theme(plot.title = element_text(hjust = 0.5)) + annotate("text", x = -0.2, y = 0.32, label = "PERMANOVA, p = 0.001") + geom_point(size=5) #+ scale_colour_manual(values = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#CC79A7")) #+ stat_ellipse(geom = "polygon", type = "t", alpha = 1/12, aes(fill = Site_layer))
pssitelayer
pdf("./Figures/FunGuilds Beta Diversity (PCoA) by Site (w Layer).pdf", width = 8, height = 5)
pssitelayer
dev.off()
pssitelayer = plot_ordination(physeq.prune.x, physeq.prune.x.ord, type = "taxa", color = "Guild") + ggtitle("Fungal Beta Diversity (PCoA) by Site") #+ theme(plot.title = element_text(hjust = 0.5)) + annotate("text", x = -0.2, y = 0.32, label = "PERMANOVA, p = 0.001") + geom_point(size=5) #+ scale_colour_manual(values = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#CC79A7")) #+ stat_ellipse(geom = "polygon", type = "t", alpha = 1/12, aes(fill = Site_layer))
pssitelayer
pssitelayer = plot_ordination(physeq.prune.x, physeq.prune.x.ord, type = "taxa", color = "Trophic.Mode") + ggtitle("Fungal Beta Diversity (PCoA) by Site") #+ theme(plot.title = element_text(hjust = 0.5)) + annotate("text", x = -0.2, y = 0.32, label = "PERMANOVA, p = 0.001") + geom_point(size=5) #+ scale_colour_manual(values = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#CC79A7")) #+ stat_ellipse(geom = "polygon", type = "t", alpha = 1/12, aes(fill = Site_layer))
pssitelayer
