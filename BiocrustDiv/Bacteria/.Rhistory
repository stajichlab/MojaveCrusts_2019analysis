if(!is.null(GroupBy)){
# pRank <- pRank + facet_wrap(facets = as.formula(paste("~", GroupBy)))
pRank <- pRank + geom_point(mapping = aes_string(colour = GroupBy),
size = 5)
} else {
# Don't include error bars for faceted version
pRank <- pRank + geom_errorbarh(aes(xmax = ebarMax,
xmin = ebarMin))
}
return(pRank)
}
otus <- read.table("MojaveBacQ2FWLEsilva515806.otu_table.fix.txt",
header=T,sep="\t",row.names = 1)
otumat <- as(as.matrix(otus), "matrix")
OTU = otu_table(otumat, taxa_are_rows = TRUE)
taxmat <- read.csv("taxonomy_phyloseq_fix.csv",
sep=",",row.names=1)
row.names(taxmat) = taxmat$OTU.ID
taxmat <- as(as.matrix(taxmat),"matrix")
TAX = tax_table(taxmat)
treefile = "tree.nwk"
tree = read.tree(treefile)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",
header=TRUE,row.names=1,
sep="\t",stringsAsFactors=FALSE)
#meta <- meta[which(meta$Layer %in% c("Surface")),]
sampleData <- sample_data(meta)
physeq = phyloseq(OTU,TAX,sampleData,tree)
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 5, physeq)
physeq.prune
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(711)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 37435, replace = FALSE, trimOTUs = TRUE)
physeq.prune.rarefy
alpha.diversity = estimate_richness(physeq.prune.rarefy, measures = c("Observed"))
data.anova = cbind(sample_data(physeq.prune.rarefy), alpha.diversity)
physeq.prune.rarefy.anova = aov(Observed ~ Crust_type, data.anova)
summary(physeq.prune.rarefy.anova)
tukey.ps = TukeyHSD(x=physeq.prune.rarefy.anova, 'Crust_type', conf.level = 0.95)
generate_label_df <- function(tukey.ps, variable){
# Extract labels and factor levels from Tukey post-hoc
Tukey.levels <- tukey.ps[[variable]][,4]
Tukey.labels <- data.frame(multcompLetters(Tukey.levels)['Letters'])
#I need to put the labels in the same order as in the boxplot :
Tukey.labels$treatment=rownames(Tukey.labels)
Tukey.labels=Tukey.labels[order(Tukey.labels$treatment) , ]
return(Tukey.labels)
}
LABELS=generate_label_df(tukey.ps, 'Crust_type')
names(LABELS) = c('Letters','Crust_type')
physeq.prune.rarefy.plot.richness.Crust_type = plot_richness(physeq.prune.rarefy, x="Crust_type", color=("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity (Observed) by Crust type") + stat_compare_means(method = "anova", label.y = 3000) + theme_bw() + theme(plot.title = element_text(hjust = 0.5))
physeq.prune.rarefy.plot.richness.Crust_type
physeq.prune.rarefy.plot.richness.Crust_type = plot_richness(physeq.prune.rarefy, x="Crust_type", color=("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity (Observed) by Crust type") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5))
physeq.prune.rarefy.plot.richness.Crust_type
physeq.prune.rarefy.plot.richness.Crust_type = plot_richness(physeq.prune.rarefy, x="Crust_type", color=("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity (Observed) by Crust type") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Crust_type, y = 1150, label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Crust_type
physeq.prune.rarefy.plot.richness.Crust_type = plot_richness(physeq.prune.rarefy, x="Crust_type", color=("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity (Observed) by Crust type") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Crust_type, y = 2900, label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Crust_type
physeq.prune.rarefy.plot.richness.Crust_type = plot_richness(physeq.prune.rarefy, x="Crust_type", color=("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity (Observed) by Crust type") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Crust_type, y = 2800, label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Crust_type
physeq.prune.rarefy.plot.richness.Crust_type = plot_richness(physeq.prune.rarefy, x="Crust_type", color=("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity (Observed) by Crust type") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Crust_type, y = 2800,3000 , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Crust_type
physeq.prune.rarefy.plot.richness.Crust_type = plot_richness(physeq.prune.rarefy, x="Crust_type", color=("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity (Observed) by Crust type") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Crust_type, y = 2800,2800,2800,2800,2800,2800,2800,2800,2800,2800 , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Crust_type
physeq.prune.rarefy.plot.richness.Crust_type = plot_richness(physeq.prune.rarefy, x="Crust_type", color=("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity (Observed) by Crust type") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Crust_type, y = 2800 , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Crust_type
#physeq.prune.rarefy.SF = subset_samples(physeq.prune.rarefy, Layer=="Surface")
sample_data(physeq.prune.rarefy)$Crust_type = factor(sample_data(physeq.prune.rarefy.SF)$Crust_type, levels = c("LAC","CLC", "GLC", "RMC", "SMC","LAC.Sub","CLC.Sub", "GLC.Sub", "RMC.Sub", "SMC.Sub"))
#physeq.prune.rarefy.SF = subset_samples(physeq.prune.rarefy, Layer=="Surface")
sample_data(physeq.prune.rarefy)$Crust_type = factor(sample_data(physeq.prune.rarefy)$Crust_type, levels = c("LAC","CLC", "GLC", "RMC", "SMC","LAC.Sub","CLC.Sub", "GLC.Sub", "RMC.Sub", "SMC.Sub"))
alpha.diversity = estimate_richness(physeq.prune.rarefy, measures = c("Observed"))
data.anova = cbind(sample_data(physeq.prune.rarefy), alpha.diversity)
physeq.prune.rarefy.anova = aov(Observed ~ Crust_type, data.anova)
summary(physeq.prune.rarefy.anova)
tukey.ps = TukeyHSD(x=physeq.prune.rarefy.anova, 'Crust_type', conf.level = 0.95)
generate_label_df <- function(tukey.ps, variable){
# Extract labels and factor levels from Tukey post-hoc
Tukey.levels <- tukey.ps[[variable]][,4]
Tukey.labels <- data.frame(multcompLetters(Tukey.levels)['Letters'])
#I need to put the labels in the same order as in the boxplot :
Tukey.labels$treatment=rownames(Tukey.labels)
Tukey.labels=Tukey.labels[order(Tukey.labels$treatment) , ]
return(Tukey.labels)
}
LABELS=generate_label_df(tukey.ps, 'Crust_type')
names(LABELS) = c('Letters','Crust_type')
physeq.prune.rarefy.plot.richness.Crust_type = plot_richness(physeq.prune.rarefy, x="Crust_type", color=("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity (Observed) by Crust type") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Crust_type, y = 2800 , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Crust_type
physeq.prune.rarefy.plot.richness.Crust_type = plot_richness(physeq.prune.rarefy, x="Crust_type", color=("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Crust type and Layer") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Crust_type, y = 2800 , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Crust_type
pdf("./Figures/Mojave Biocrust Bacterial Alpha Diversity by Crust type and Layer.pdf", width = 8, height = 5 )
physeq.prune.rarefy.plot.richness.Crust_type
dev.off()
generate_label_df <- function(tukey.ps, variable){
# Extract labels and factor levels from Tukey post-hoc
Tukey.levels <- tukey.ps[[variable]][,9]
Tukey.labels <- data.frame(multcompLetters(Tukey.levels)['Letters'])
#I need to put the labels in the same order as in the boxplot :
Tukey.labels$treatment=rownames(Tukey.labels)
Tukey.labels=Tukey.labels[order(Tukey.labels$treatment) , ]
return(Tukey.labels)
}
LABELS=generate_label_df(tukey.ps, 'Crust_type')
generate_label_df <- function(tukey.ps, variable){
# Extract labels and factor levels from Tukey post-hoc
Tukey.levels <- tukey.ps[[variable]][,4]
Tukey.labels <- data.frame(multcompLetters(Tukey.levels)['Letters'])
#I need to put the labels in the same order as in the boxplot :
Tukey.labels$treatment=rownames(Tukey.labels)
Tukey.labels=Tukey.labels[order(Tukey.labels$treatment) , ]
return(Tukey.labels)
}
LABELS=generate_label_df(tukey.ps, 'Crust_type')
names(LABELS) = c('Letters','Crust_type')
LABELS
plot(tukey.ps , las=1 , col="brown" )
Tukey.levels
Tukey.levels <- tukey.ps[[variable]][,4]
tukey.ps
physeq.prune.rarefy.plot.richness.Crust_type = plot_richness(physeq.prune.rarefy, x="Crust_type", color=("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Crust type and Layer") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Crust_type, y = 2800 , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Crust_type
sample_data(physeq.prune.rarefy)$Site_layer = factor(sample_data(physeq.prune.rarefy)$Site_layer, levels = c("JTNP_SF","CIMA_SF", "GMT_SF", "KELSO_SF", "JTNP_Sub","CIMA_Sub", "GMT_Sub", "KELSO_Sub"))
alpha.diversity = estimate_richness(physeq.prune.rarefy, measures = c("Observed"))
data.anova = cbind(sample_data(physeq.prune.rarefy), alpha.diversity)
physeq.prune.rarefy.anova = aov(Observed ~ Site, data.anova)
summary(physeq.prune.rarefy.anova)
alpha.diversity = estimate_richness(physeq.prune.rarefy, measures = c("Observed"))
data.anova = cbind(sample_data(physeq.prune.rarefy), alpha.diversity)
physeq.prune.rarefy.anova = aov(Observed ~ Site_layer, data.anova)
summary(physeq.prune.rarefy.anova)
physeq.prune.rarefy.SF.anova
physeq.prune.rarefy.anova
tukey.ps = TukeyHSD(x=physeq.prune.rarefy.anova, 'Site_layer', conf.level = 0.95)
generate_label_df <- function(tukey.ps, variable){
# Extract labels and factor levels from Tukey post-hoc
Tukey.levels <- tukey.ps.SF[[variable]][,4]
Tukey.labels <- data.frame(multcompLetters(Tukey.levels)['Letters'])
#I need to put the labels in the same order as in the boxplot :
Tukey.labels$treatment=rownames(Tukey.labels)
Tukey.labels=Tukey.labels[order(Tukey.labels$treatment) , ]
return(Tukey.labels)
}
LABELS=generate_label_df(tukey.ps, 'Site_layer')
generate_label_df <- function(tukey.ps, variable){
# Extract labels and factor levels from Tukey post-hoc
Tukey.levels <- tukey.ps[[variable]][,4]
Tukey.labels <- data.frame(multcompLetters(Tukey.levels)['Letters'])
#I need to put the labels in the same order as in the boxplot :
Tukey.labels$treatment=rownames(Tukey.labels)
Tukey.labels=Tukey.labels[order(Tukey.labels$treatment) , ]
return(Tukey.labels)
}
LABELS=generate_label_df(tukey.ps, 'Site_layer')
names(LABELS) = c('Letters','Site_layer')
LABELS
physeq.prune.rarefy.plot.richness.Site_layer = plot_richness(physeq.prune.rarefy, x="Site_layer", color=("Site_layer"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Site and Layer") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5))
physeq.prune.rarefy.plot.richness.Site_layer
physeq.prune.rarefy.plot.richness.Site_layer = plot_richness(physeq.prune.rarefy, x="Site_layer", color=("Site_layer"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Site and Layer") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Site, y = 2800, label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Site_layer
pdf("./Figures/Mojave Biocrust Bacterial Alpha Diversity by Site and Layer.pdf", width = 8, height = 5 )
physeq.prune.rarefy.plot.richness.Site_layer
dev.off()
alpha.diversity
physeq.prune.rarefy.plot.richness.Site_layer = plot_richness(physeq.prune.rarefy, x="Site_layer", color=("Site_layer"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Site and Layer") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Site, label = LABELS$Letters), vjust = -0.5)
physeq.prune.rarefy.plot.richness.Site_layer
physeq.prune.rarefy.plot.richness.Site_layer = plot_richness(physeq.prune.rarefy, x="Site_layer", color=("Site_layer"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Site and Layer") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Site, label = LABELS$Letters), position = position_dodge(width = 1),vjust = -0.5, size = 2)
physeq.prune.rarefy.plot.richness.Site_layer
physeq.prune.rarefy.plot.richness.Site_layer = plot_richness(physeq.prune.rarefy, x="Site_layer", color=("Site_layer"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Site and Layer") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Site, y = y, label = LABELS$Letters), position = position_dodge(width = 1),vjust = -0.5, size = 2)
physeq.prune.rarefy.plot.richness.Site_layer
physeq.prune.rarefy.plot.richness.Site_layer = plot_richness(physeq.prune.rarefy, x="Site_layer", color=("Site_layer"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Site and Layer") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5))
physeq.prune.rarefy.plot.richness.Site_layer + geom_text(data=LABELS, aes(x=LABELS$Site, y = physeq.prune.rarefy.plot.richness.Site_layer$data$value , label = LABELS$Letters), position = position_dodge(width = 1),vjust = -0.5, size = 2)
physeq.prune.rarefy.plot.richness.Site_layer$data$value
physeq.prune.rarefy.plot.richness.Site_layer$data$Site_layer
physeq.prune.rarefy.plot.richness.Site_layer$data$se
physeq.prune.rarefy.plot.richness.Site_layer$data$variable
my.ggp.yrange <- ggplot_build(physeq.prune.rarefy.plot.richness.Site_layer)$panel$ranges[[1]]$y.range
my.ggp.yrange
pg <- ggplot_build(physeq.prune.rarefy.plot.richness.Site_layer)
pg <- ggplot_build(physeq.prune.rarefy.plot.richness.Site_layer)
pg
pg <- ggplot_build(physeq.prune.rarefy.plot.richness.Site_layer)
head(pg$data[[1]])
physeq.prune.rarefy.plot.richness.Site_layer = plot_richness(physeq.prune.rarefy, x="Site_layer", color=("Site_layer"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Site and Layer") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5))
physeq.prune.rarefy.plot.richness.Site_layer + geom_text(data=LABELS, aes(x=LABELS$Site, y = 2800 , label = LABELS$Letters), position = position_dodge(width = 1),vjust = -0.5, size = 2)
pg <- ggplot_build(physeq.prune.rarefy.plot.richness.Site_layer)
head(pg$data[[1]])
pg <- ggplot_build(physeq.prune.rarefy.plot.richness.Site_layer)
pg$data[[1]]
pg <- ggplot_build(physeq.prune.rarefy.plot.richness.Site_layer)
pg$data[[2]]
pg <- ggplot_build(physeq.prune.rarefy.plot.richness.Site_layer)
pg$data[[1]]
physeq.prune.rarefy.plot.richness.Site_layer = plot_richness(physeq.prune.rarefy, x="Site_layer", color=("Site_layer"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Site and Layer") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5)) + + geom_text(data=LABELS, aes(x=LABELS$Site, y = 2800 , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Site_layer = plot_richness(physeq.prune.rarefy, x="Site_layer", color=("Site_layer"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Site and Layer") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Site, y = 2800 , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Site_layer
pdf("./Figures/Mojave Biocrust Bacterial Alpha Diversity by Site and Layer.pdf", width = 8, height = 5 )
physeq.prune.rarefy.plot.richness.Site_layer
dev.off()
colnames(LABELS) <- c(2800,1200,3000,3000,3000,3000,3000,3000)
ylabel <- data.frame("ylabel" = c(2100,1500,2000,3000,2000,2000,2000,2000)
ylabel <- data.frame("ylabel" = c(2100,1500,2000,3000,2000,2000,2000,2000))
LABELS$ylabel<-ylabel$ylabel
LABELS
physeq.prune.rarefy.plot.richness.Site_layer = plot_richness(physeq.prune.rarefy, x="Site_layer", color=("Site_layer"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Site and Layer") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Site, y = LABELS$ylabel , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Site_layer
ylabel <- data.frame("ylabel" = c(1100,2600,1150,2050,1000,1600,1100,2500))
LABELS$ylabel<-ylabel$ylabel
LABELS
physeq.prune.rarefy.plot.richness.Site_layer = plot_richness(physeq.prune.rarefy, x="Site_layer", color=("Site_layer"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Site and Layer") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Site, y = LABELS$ylabel , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Site_layer
physeq.prune.rarefy.plot.richness.Site_layer = plot_richness(physeq.prune.rarefy, x="Site_layer", color=("Site_layer"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Site and Layer") + stat_compare_means(method = "anova", label.y = 2800) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Site, y = LABELS$ylabel , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Site_layer
ylabel <- data.frame("ylabel" = c(1150,2600,1150,2050,1000,1600,1100,2500))
LABELS$ylabel<-ylabel$ylabel
LABELS
physeq.prune.rarefy.plot.richness.Site_layer = plot_richness(physeq.prune.rarefy, x="Site_layer", color=("Site_layer"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Site and Layer") + stat_compare_means(method = "anova", label.y = 2800) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Site, y = LABELS$ylabel , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Site_layer
ylabel <- data.frame("ylabel" = c(1150,2600,1200,2050,1000,1600,1100,2500))
LABELS$ylabel<-ylabel$ylabel
LABELS
physeq.prune.rarefy.plot.richness.Site_layer = plot_richness(physeq.prune.rarefy, x="Site_layer", color=("Site_layer"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Site and Layer") + stat_compare_means(method = "anova", label.y = 2800) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Site, y = LABELS$ylabel , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Site_layer
ylabel <- data.frame("ylabel" = c(1150,2600,1200,2050,1000,1650,1100,2500))
LABELS$ylabel<-ylabel$ylabel
LABELS
physeq.prune.rarefy.plot.richness.Site_layer = plot_richness(physeq.prune.rarefy, x="Site_layer", color=("Site_layer"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Site and Layer") + stat_compare_means(method = "anova", label.y = 2800) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Site, y = LABELS$ylabel , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Site_layer
ylabel <- data.frame("ylabel" = c(1150,2650,1200,2050,1000,1650,1100,2500))
LABELS$ylabel<-ylabel$ylabel
LABELS
physeq.prune.rarefy.plot.richness.Site_layer = plot_richness(physeq.prune.rarefy, x="Site_layer", color=("Site_layer"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Site and Layer") + stat_compare_means(method = "anova", label.y = 2800) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Site, y = LABELS$ylabel , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Site_layer
pdf("./Figures/Mojave Biocrust Bacterial Alpha Diversity by Site and Layer.pdf", width = 8, height = 5 )
physeq.prune.rarefy.plot.richness.Site_layer
dev.off()
#physeq.prune.rarefy.SF = subset_samples(physeq.prune.rarefy, Layer=="Surface")
sample_data(physeq.prune.rarefy)$Crust_type = factor(sample_data(physeq.prune.rarefy)$Crust_type, levels = c("LAC","CLC", "GLC", "RMC", "SMC","LAC.Sub","CLC.Sub", "GLC.Sub", "RMC.Sub", "SMC.Sub"))
alpha.diversity = estimate_richness(physeq.prune.rarefy, measures = c("Observed"))
data.anova = cbind(sample_data(physeq.prune.rarefy), alpha.diversity)
physeq.prune.rarefy.anova = aov(Observed ~ Crust_type, data.anova)
summary(physeq.prune.rarefy.anova)
tukey.ps = TukeyHSD(x=physeq.prune.rarefy.anova, 'Crust_type', conf.level = 0.95)
generate_label_df <- function(tukey.ps, variable){
# Extract labels and factor levels from Tukey post-hoc
Tukey.levels <- tukey.ps[[variable]][,4]
Tukey.labels <- data.frame(multcompLetters(Tukey.levels)['Letters'])
#I need to put the labels in the same order as in the boxplot :
Tukey.labels$treatment=rownames(Tukey.labels)
Tukey.labels=Tukey.labels[order(Tukey.labels$treatment) , ]
return(Tukey.labels)
}
LABELS=generate_label_df(tukey.ps, 'Crust_type')
names(LABELS) = c('Letters','Crust_type')
LABELS
ylabel <- data.frame("ylabel" = c(1150,2650,1200,2050,1000,1650,1100,2500,1000,2000))
LABELS$ylabel<-ylabel$ylabel
physeq.prune.rarefy.plot.richness.Crust_type = plot_richness(physeq.prune.rarefy, x="Crust_type", color=("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Crust type and Layer") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Crust_type, y = 2800 , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Crust_type
physeq.prune.rarefy.plot.richness.Crust_type = plot_richness(physeq.prune.rarefy, x="Crust_type", color=("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Crust type and Layer") + stat_compare_means(method = "anova", label.y = 3000) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Crust_type, y = LABELS$ylabel , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Crust_type
physeq.prune.rarefy.plot.richness.Crust_type = plot_richness(physeq.prune.rarefy, x="Crust_type", color=("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Crust type and Layer") + stat_compare_means(method = "anova", label.y = 2800) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Crust_type, y = LABELS$ylabel , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Crust_type
ylabel <- data.frame("ylabel" = c(1150,2050,1050,2050,850,2550,1200,2500,1050,1850))
LABELS$ylabel<-ylabel$ylabel
physeq.prune.rarefy.plot.richness.Crust_type = plot_richness(physeq.prune.rarefy, x="Crust_type", color=("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Crust type and Layer") + stat_compare_means(method = "anova", label.y = 2800) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Crust_type, y = LABELS$ylabel , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Crust_type
ylabel <- data.frame("ylabel" = c(1150,2100,1050,2050,850,2600,1200,2500,1100,1900))
LABELS$ylabel<-ylabel$ylabel
physeq.prune.rarefy.plot.richness.Crust_type = plot_richness(physeq.prune.rarefy, x="Crust_type", color=("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Crust type and Layer") + stat_compare_means(method = "anova", label.y = 2800) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Crust_type, y = LABELS$ylabel , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Crust_type
ylabel <- data.frame("ylabel" = c(1150,2100,1050,2050,850,2650,1200,2500,1100,1900))
LABELS$ylabel<-ylabel$ylabel
physeq.prune.rarefy.plot.richness.Crust_type = plot_richness(physeq.prune.rarefy, x="Crust_type", color=("Crust_type"), measures=c("Observed")) + geom_boxplot() + ggtitle("Mojave Biocrust Bacterial Alpha Diversity by Crust type and Layer") + stat_compare_means(method = "anova", label.y = 2800) + theme(plot.title = element_text(hjust = 0.5)) + geom_text(data=LABELS, aes(x=LABELS$Crust_type, y = LABELS$ylabel , label = LABELS$Letters))
physeq.prune.rarefy.plot.richness.Crust_type
pdf("./Figures/Mojave Biocrust Bacterial Alpha Diversity by Crust type and Layer.pdf", width = 8, height = 5 )
physeq.prune.rarefy.plot.richness.Crust_type
dev.off()
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(vegan)
library(plyr)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(magrittr)
library(ggplot2)
library(ggpubr)
library(data.table)
library(tidyr)
library(tidyverse)
library(multcompView)
otus <- read.table("MojaveBacQ2FWLEsilva515806.otu_table.fix.txt",
header=T,sep="\t",row.names = 1)
otumat <- as(as.matrix(otus), "matrix")
OTU = otu_table(otumat, taxa_are_rows = TRUE)
taxmat <- read.csv("taxonomy_phyloseq_fix.csv",
sep=",",row.names=1)
row.names(taxmat) = taxmat$OTU.ID
taxmat <- as(as.matrix(taxmat),"matrix")
TAX = tax_table(taxmat)
treefile = "tree.nwk"
tree = read.tree(treefile)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",
header=TRUE,row.names=1,
sep="\t",stringsAsFactors=FALSE)
#meta <- meta[which(meta$Layer %in% c("Surface")),]
sampleData <- sample_data(meta)
physeq = phyloseq(OTU,TAX,sampleData,tree)
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 5, physeq)
physeq.prune
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(711)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 37435, replace = FALSE, trimOTUs = TRUE)
physeq.prune.rarefy
ps.taxglom = tax_glom(physeq.prune.rarefy, taxrank="Phylum")
#ps.taxglom.prune = prune_taxa(names(sort(taxa_sums(ps.taxglom), TRUE))[1:10], ps.taxglom)
set.seed(711L)
psplotnet = plot_net(physeq.prune.rarefy, distance = "bray", type = "taxa", laymeth = "circle", color = "Phylum", point_label ="Phylum", hjust = 0.3, maxdist = 0.3) + ggtitle("Biocrust Microbial Community Network Analysis")  + theme(plot.title = element_text(hjust = 0.5))
ps.taxglom = tax_glom(physeq.prune.rarefy, taxrank="Phylum")
ps.taxglom.prune = prune_taxa(names(sort(taxa_sums(ps.taxglom), TRUE))[1:1000], physeq.prune.rarefy)
ps.taxglom.prune = prune_taxa(names(sort(taxa_sums(physeq.prune.rarefy), TRUE))[1:1000], physeq.prune.rarefy)
set.seed(711L)
psplotnet = plot_net(ps.taxglom.prune, distance = "bray", type = "taxa", laymeth = "circle", color = "Phylum", point_label ="Phylum", hjust = 0.3, maxdist = 0.3) + ggtitle("Biocrust Bacterial Community Network Analysis")  + theme(plot.title = element_text(hjust = 0.5))
psplotnet
ps.taxglom.prune = prune_taxa(names(sort(taxa_sums(physeq.prune.rarefy), TRUE))[1:1000], physeq.prune.rarefy)
set.seed(711L)
psplotnet = plot_net(ps.taxglom.prune, distance = "bray", type = "taxa", laymeth = "circle", color = "Phylum", point_label ="Phylum", hjust = 0.2, maxdist = 0.2) + ggtitle("Biocrust Bacterial Community Network Analysis")  + theme(plot.title = element_text(hjust = 0.5))
psplotnet
ps.taxglom.prune = prune_taxa(names(sort(taxa_sums(physeq.prune.rarefy), TRUE))[1:2000], physeq.prune.rarefy)
set.seed(711L)
psplotnet = plot_net(ps.taxglom.prune, distance = "bray", type = "taxa", laymeth = "circle", color = "Phylum", point_label ="Phylum", hjust = 0.2, maxdist = 0.2) + ggtitle("Biocrust Bacterial Community Network Analysis")  + theme(plot.title = element_text(hjust = 0.5))
psplotnet
ps.taxglom.prune = prune_taxa(names(sort(taxa_sums(physeq.prune.rarefy), TRUE))[1:200], physeq.prune.rarefy)
set.seed(711L)
psplotnet = plot_net(ps.taxglom.prune, distance = "bray", type = "taxa", laymeth = "circle", color = "Phylum", point_label ="Phylum", hjust = 0.2, maxdist = 0.2) + ggtitle("Biocrust Bacterial Community Network Analysis")  + theme(plot.title = element_text(hjust = 0.5))
psplotnet
ps.taxglom.prune = prune_taxa(names(sort(taxa_sums(physeq.prune.rarefy), TRUE))[1:500], physeq.prune.rarefy)
set.seed(711L)
psplotnet = plot_net(ps.taxglom.prune, distance = "bray", type = "taxa", laymeth = "circle", color = "Phylum", point_label ="Phylum", hjust = 0.2, maxdist = 0.2) + ggtitle("Biocrust Bacterial Community Network Analysis")  + theme(plot.title = element_text(hjust = 0.5))
psplotnet
ps.taxglom.prune = prune_taxa(names(sort(taxa_sums(physeq.prune.rarefy), TRUE))[1:500], physeq.prune.rarefy)
set.seed(711L)
psplotnet = plot_net(ps.taxglom.prune, distance = "bray", type = "taxa", laymeth = "circle", color = "Genus", point_label ="Genus", hjust = 0.2, maxdist = 0.2) + ggtitle("Biocrust Bacterial Community Network Analysis")  + theme(plot.title = element_text(hjust = 0.5))
psplotnet
ps.taxglom.prune = prune_taxa(names(sort(taxa_sums(physeq.prune.rarefy), TRUE))[1:1500], physeq.prune.rarefy)
set.seed(711L)
psplotnet = plot_net(ps.taxglom.prune, distance = "bray", type = "taxa", laymeth = "circle", color = "Genus", point_label ="Genus", hjust = 0.2, maxdist = 0.2) + ggtitle("Biocrust Bacterial Community Network Analysis")  + theme(plot.title = element_text(hjust = 0.5))
psplotnet
ps.taxglom.prune = prune_taxa(names(sort(taxa_sums(physeq.prune.rarefy), TRUE))[1:1000], physeq.prune.rarefy)
set.seed(711L)
psplotnet = plot_net(ps.taxglom.prune, distance = "bray", type = "taxa", laymeth = "circle", color = "Genus", point_label ="Genus", hjust = 0.2, maxdist = 0.2) + ggtitle("Biocrust Bacterial Community Network Analysis")  + theme(plot.title = element_text(hjust = 0.5))
psplotnet
df = psplotnet$data
df.v1 = data.frame(OTU1 = df$v1, stringsAsFactors = T )
df.v2 = data.frame(OTU1 = df$v2, stringsAsFactors = T )
df.v1.v2 = rbind(df.v1,df.v2)
tax.circlize <- read.table("taxonomy_phyloseq_fix.csv", header=T,sep=",")
cdf = data.frame(OTU1 = df$v1, OTU2 = df$v2, Similarity = as.vector(1-df$Distance), stringsAsFactors = TRUE )
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 3], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 3], Similarity=cdf$Similarity)
cdf.w.tax
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 6], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 6], Similarity=cdf$Similarity)
cdf.w.tax
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 8], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 8], Similarity=cdf$Similarity)
cdf.w.tax
circos.clear()
library(circlize)
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.75)
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 6], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 6], Similarity=cdf$Similarity)
cdf.w.tax
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.75)
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 2], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 2], Similarity=cdf$Similarity)
cdf.w.tax
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.75)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 4], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 4], Similarity=cdf$Similarity)
cdf.w.tax
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 8], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 8], Similarity=cdf$Similarity)
cdf.w.tax
cdf.w.tax[is.na(cdf.w.tax)] <- 'unidentified'
cdf.w.tax[is.na(cdf.w.tax)] <- "unidentified"
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 8], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 8], Similarity=cdf$Similarity, stringsAsFactors = F)
cdf.w.tax
cdf.w.tax[is.na(cdf.w.tax)] <- "unidentified"
cdf.w.tax[is.na(cdf.w.tax)] <- 0
levels <- levels(cdf.w.tax)
levels[length(levels) + 1] <- "None"
cdf.w.tax[is.na(cdf.w.tax)] <- "None"
cdf.w.tax[is.na(cdf.w.tax)] <- "unidentified"
str(cdf.w.tax)
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 8], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 8], Similarity=cdf$Similarity, stringsAsFactors = FALSE)
cdf.w.tax
str(cdf.w.tax)
as.character(cdf.w.tax$OTU1)
str(cdf.w.tax)
cdf.w.tax <- as.character(cdf.w.tax$OTU1)
cdf.w.tax <- as.character(cdf.w.tax$OTU2)
cdf.w.tax <- as.character(cdf.w.tax$OTU1)
cdf.w.tax <- as.character(cdf.w.tax)
#cdf.w.tax <- as.character(cdf.w.tax$OTU2)
str(cdf.w.tax)
cdf.w.tax[is.na(cdf.w.tax)] <- "unidentified"
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
cdf.w.tax <- as.factor(cdf.w.tax)
str(cdf.w.tax)
str(cdf.w.tax)
cdf.w.tax
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 8], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 8], Similarity=cdf$Similarity, stringsAsFactors = FALSE)
cdf.w.tax
cdf.w.tax$OTU1 <- as.character(cdf.w.tax$OTU1)
cdf.w.tax$OTU2 <- as.character(cdf.w.tax$OTU2)
str(cdf.w.tax)
cdf.w.tax[is.na(cdf.w.tax)] <- "unidentified"
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
pdf("Figures/Biocrust Bacterial Community Network Analysis.pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Bacterial Community Network Analysis")
circos.clear()
dev.off()
physeq.prune.rarefy = subset_samples(physeq.prune.rarefy, Layer=="Surface")
ps.taxglom.prune = prune_taxa(names(sort(taxa_sums(physeq.prune.rarefy), TRUE))[1:1000], physeq.prune.rarefy)
set.seed(711L)
psplotnet = plot_net(ps.taxglom.prune, distance = "bray", type = "taxa", laymeth = "circle", color = "Genus", point_label ="Genus", hjust = 0.2, maxdist = 0.2) + ggtitle("Biocrust Bacterial Community Network Analysis")  + theme(plot.title = element_text(hjust = 0.5))
psplotnet
df = psplotnet$data
df.v1 = data.frame(OTU1 = df$v1, stringsAsFactors = T )
df.v2 = data.frame(OTU1 = df$v2, stringsAsFactors = T )
df.v1.v2 = rbind(df.v1,df.v2)
tax.circlize <- read.table("taxonomy_phyloseq_fix.csv", header=T,sep=",")
cdf = data.frame(OTU1 = df$v1, OTU2 = df$v2, Similarity = as.vector(1-df$Distance), stringsAsFactors = TRUE )
cdf.w.tax = data.frame(OTU1=tax.circlize[match(cdf$OTU1, tax.circlize$OTU.ID), 8], OTU2=tax.circlize[match(cdf$OTU2, tax.circlize$OTU.ID), 8], Similarity=cdf$Similarity, stringsAsFactors = FALSE)
cdf.w.tax
cdf.w.tax$OTU1 <- as.character(cdf.w.tax$OTU1)
cdf.w.tax$OTU2 <- as.character(cdf.w.tax$OTU2)
str(cdf.w.tax)
cdf.w.tax[is.na(cdf.w.tax)] <- "unidentified"
circos.clear()
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
circos.clear()
pdf("Figures/Biocrust Bacterial Community Network Analysis.pdf", width = 18, height = 18)
chordDiagram(cdf.w.tax, annotationTrack = "grid", annotationTrackHeight = 0.01, preAllocateTracks = 1, link.visible = cdf.w.tax[[3]] > 0.85)
for(si in get.all.sector.index()) {
xlim = get.cell.meta.data("xlim", sector.index = si, track.index = 1)
ylim = get.cell.meta.data("ylim", sector.index = si, track.index = 1)
circos.text(mean(xlim), ylim[1], si, facing = "clockwise", adj = c(-0.1, -0.2),
niceFacing = TRUE, cex = 1.2, col = "black", sector.index = si, track.index = 1)
}
title(main = "Biocrust Bacterial Community Network Analysis")
circos.clear()
dev.off()
