knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(vegan)
library(plyr)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(magrittr)
library(ggplot2)
library(ggpubr)
library(data.table)
library(tidyr)
library(labdsv)
otus <- read.table("MojaveBacQ2FWLEsilva515806.otu_table.fix.txt",
header=T,sep="\t",row.names = 1)
otumat <- as(as.matrix(otus), "matrix")
OTU = otu_table(otumat, taxa_are_rows = TRUE)
otus <- read.table("MojaveBacQ2FWLEsilva515806.otu_table.fix.txt",
header=T,sep="\t",row.names = 1)
otumat <- as(as.matrix(otus), "matrix")
OTU = otu_table(otumat, taxa_are_rows = TRUE)
taxmat <- read.csv("taxonomy_phyloseq_fix.csv",
sep=",",row.names=1)
row.names(taxmat) = taxmat$OTU.ID
taxmat <- as(as.matrix(taxmat),"matrix")
TAX = tax_table(taxmat)
treefile = "tree.nwk"
tree = read.tree(treefile)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",
header=TRUE,row.names=1,
sep="\t",stringsAsFactors=FALSE)
meta = meta[which(meta$Layer %in% c("Surface")),]
sampleData <- sample_data(meta)
physeq = phyloseq(OTU,TAX,sampleData,tree)
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 5, physeq)
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(711)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 37386, replace = FALSE, trimOTUs = TRUE)
physeq.prune.rarefy
Bac.physeq.prune.rarefy = subset_taxa(physeq.prune.rarefy, Kingdom != "Rhizaria")
Bac.physeq.prune.rarefy = subset_taxa(Bac.physeq.prune.rarefy, Kingdom != "Chromista")
Bac.physeq.prune.rarefy = subset_taxa(Bac.physeq.prune.rarefy, Kingdom != "Unassigned")
Bac.physeq.prune.rarefy = subset_taxa(Bac.physeq.prune.rarefy, Kingdom != "D_0__Eukaryota")
Bac.physeq.prune.rarefy
Bac.physeq.prune.rarefy
physeq.prune.rarefy.merge.Crust_type <- merge_samples(Bac.physeq.prune.rarefy, "Crust_type")
sample_data(physeq.prune.rarefy.merge.Crust_type)$Crust_type <- factor(sample_names(physeq.prune.rarefy.merge.Crust_type))
physeq.prune.rarefy.merge.Crust_type
Bac.physeq.prune.rarefy
phyloGlom = tax_glom(Bac.physeq.prune.rarefy,taxrank = "Species")
phyloGlom
glomTax = tax_table(phyloGlom)[,"OTU.ID"]
glomOTU = otu_table(phyloGlom)
glomTable = merge(glomOTU,glomTax,by=0,all=TRUE)
head(glomTable)
rownames(glomTable) = glomTable[,"OTU.ID"]
glomTable$Row.names = NULL
glomTable$OTU.ID = NULL
head(glomTable)
ASV = t(glomTable)
ASV.no0 = ASV[, colSums(ASV != 0) > 0]
Crust_type.Mojave = subset(sampleData,select = "Site")
class(sampleData$Site)
Crust_type.Mojave = subset(sampleData,select = "Crust_type")
class(sampleData$Site)
sampleData$Site
Crust_type.Mojave$Site = as.numeric(as.factor(Crust_type.Mojave$Site))
Crust_type.Mojave$Crust_type = as.numeric(as.factor(Crust_type.Mojave$Crust_type))
Crust_type.Mojave$Crust_type
Crust_type.Mojave.indic = indval(ASV.no0,Crust_type.Mojave$Crust_type)
summary(Crust_type.Mojave.indic, p = 0.05, type = "short")
summary(Crust_type.Mojave.indic, p = 0.05, type = "long")
Crust_type.Mojave.indic$indval
Crust_type.Mojave.indic$indcls
gr <- Crust_type.Mojave.indic$maxcls[Crust_type.Mojave.indic$pval<=0.05]
iv <- Crust_type.Mojave.indic$indcls[Crust_type.Mojave.indic$pval<=0.05]
pv <- Crust_type.Mojave.indic$pval[Crust_type.Mojave.indic$pval<=0.05]
fr <- apply(ASV.no0[,-1]>0, 2, sum)[Crust_type.Mojave.indic$pval<=0.05]
indvalsummary <- data.frame(group=gr, indval=iv, pvalue=pv, freq=fr)
indvalsummary <- indvalsummary[order(indvalsummary$group, -indvalsummary$indval),]
indvalsummary
rowClean <- function(x){ rownames(x) <- gsub("X", "", rownames(x)); x }
indvalsummary = rowClean(indvalsummary)
indvalsummary
Crust_type.Mojave.indic.indval = as.data.frame(Crust_type.Mojave.indic$indval)
Crust_type.Mojave.indic.indval = rowClean(Crust_type.Mojave.indic.indval)
Crust_type.Mojave.indic.indval
Crust_type.Mojave.indic.indval_filtered = Crust_type.Mojave.indic.indval[row.names(Crust_type.Mojave.indic.indval) %in% row.names(indvalsummary),]
Crust_type.Mojave.indic.indval_filtered
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "1"] <- "CLC"
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "2"] <- "GLC"
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "3"] <- "LAC"
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "4"] <- "RMC"
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "5"] <- "SMC"
head(Crust_type.Mojave.indic.indval_filtered)
indic.otumat <- as(as.matrix(Crust_type.Mojave.indic.indval_filtered), "matrix")
indic.OTU = otu_table(indic.otumat, taxa_are_rows = TRUE)
head(indic.OTU)
indic.meta = read.table("Bac.indic.meta.tsv",
header=TRUE,row.names=1,
sep="\t",stringsAsFactors=FALSE)
indic.meta
indic.sampleData <- sample_data(indic.meta)
indic.physeq = phyloseq(indic.OTU,TAX,indic.sampleData)
indic.physeq
sample_data(indic.physeq)$Crust_type = factor(sample_data(indic.physeq)$Crust_type, levels = c("LAC", "CLC", "GLC", "RMC", "SMC"))
Heatmap.indic.physeq = prune_taxa(names(sort(taxa_sums(indic.physeq),TRUE)[1:65]),indic.physeq)
Heatmap.indic.physeq.plot = plot_heatmap(Heatmap.indic.physeq, "PCoA", "bray", sample.label = NULL ,"Genus", sample.order = c("LAC", "CLC", "GLC", "RMC", "SMC"))+ ggtitle("Bacterial indicator species heatmap (P < 0.05)") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.indic.physeq.plot)
indic.physeq = phyloseq(indic.OTU,TAX,indic.sampleData)
indic.physeq
Heatmap.indic.physeq.plot = plot_heatmap(indic.physeq, "PCoA", "bray", sample.label = NULL ,"Genus", sample.order = c("LAC", "CLC", "GLC", "RMC", "SMC"))+ ggtitle("Bacterial indicator species heatmap (P < 0.05)") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.indic.physeq.plot)
indic.TAX = tax_table(indic.physeq)
otu <- read.table("MojaveBacQ2FWLE.otu_table.fix.txt",header=T,sep="\t")
otu <- read.table("MojaveBacQ2FWLE.otu_table.fix.txt",header=T,sep="\t")
getwd()
otu <- read.table("MojaveBacQ2FWLEsilva515806.otu_table.fix.txt",header=T,sep="\t")
otus.filtered = otu[otu$OTU.ID %in% OTU_SF_merge_crust_type_endemic_df$OTUendemic,]
otu <- read.table("MojaveBacQ2FWLEsilva515806.otu_table.fix.txt",header=T,sep="\t")
otus.filtered = otu[otu$OTU.ID %in% indic.physeq.OTU.Tax.tab$OTU.ID,]
sample_data(indic.physeq)$Crust_type = factor(sample_data(indic.physeq)$Crust_type, levels = c("LAC", "CLC", "GLC", "RMC", "SMC"))
indic.physeq.TAX = tax_table(indic.physeq)
indic.physeq.OTU.Tax.tab = merge(indvalsummary,indic.physeq.TAX,by=0,all=TRUE)
indic.physeq.OTU.Tax.tab
otu <- read.table("MojaveBacQ2FWLEsilva515806.otu_table.fix.txt",header=T,sep="\t")
otus.filtered = otu[otu$OTU.ID %in% indic.physeq.OTU.Tax.tab$OTU.ID,]
indic.otus.filtered = otus.filtered[otus.filtered$OTU.ID %in% row.names(indvalsummary),]
indic.otus.filtered.rn = indic.otus.filtered[,-1]
rownames(indic.otus.filtered.rn) = indic.otus.filtered[,1]
indic.otumat.endemic <- as(as.matrix(indic.otus.filtered.rn), "matrix")
indic.OTU.endemic = otu_table(indic.otumat.endemic, taxa_are_rows = TRUE)
abundance.indic.physeq = phyloseq(indic.OTU.endemic,indic.TAX,sampleData)
abundance.indic.physeq
Heatmap.abundance.indic.physeq.plot = plot_heatmap(abundance.indic.physeq, "NMDS", "bray", "Crust_type", "Genus", sample.order = "Crust_type")+ ggtitle("Bacterial endemic indicator spcecies abundance") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.abundance.indic.physeq.plot)
#ggsave("./Figures/Bacterial_endemic_indicator_species_heatmap_Genus_May14.png", plot = Heatmap.abundance.indic.physeq.noGLC.plot, width = 12, height = 8)
Heatmap.abundance.indic.physeq.plot = plot_heatmap(abundance.indic.physeq, "NMDS", "bray", "Crust_type", "Genus", sample.order = "Crust_type", high="orangered3")+ ggtitle("Bacterial endemic indicator spcecies abundance") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.abundance.indic.physeq.plot)
#ggsave("./Figures/Bacterial_endemic_indicator_species_heatmap_Genus_May14.png", plot = Heatmap.abundance.indic.physeq.noGLC.plot, width = 12, height = 8)
Heatmap.abundance.indic.physeq.plot = plot_heatmap(abundance.indic.physeq, "PCoA", "bray", "Crust_type", "Genus", sample.order = "Crust_type", high="orangered3")+ ggtitle("Bacterial endemic indicator spcecies abundance") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.abundance.indic.physeq.plot)
#ggsave("./Figures/Bacterial_endemic_indicator_species_heatmap_Genus_May14.png", plot = Heatmap.abundance.indic.physeq.noGLC.plot, width = 12, height = 8)
Heatmap.abundance.indic.physeq.plot = plot_heatmap(abundance.indic.physeq, "PCoA", "unifrac", "Crust_type", "Genus", sample.order = "Crust_type", high="orangered3")+ ggtitle("Bacterial endemic indicator spcecies abundance") + theme(plot.title = element_text(hjust = 0.5))
Heatmap.abundance.indic.physeq.plot = plot_heatmap(abundance.indic.physeq, "PCoA", "bray", "Crust_type", "Genus", sample.order = "Crust_type", high="orangered3")+ ggtitle("Bacterial endemic indicator spcecies abundance") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.abundance.indic.physeq.plot)
#ggsave("./Figures/Bacterial_endemic_indicator_species_heatmap_Genus_May14.png", plot = Heatmap.abundance.indic.physeq.noGLC.plot, width = 12, height = 8)
Heatmap.abundance.indic.physeq.plot = plot_heatmap(abundance.indic.physeq, "PCoA", "bray", "Crust_type", "Genus", sample.order = "Crust_type", high="orangered2")+ ggtitle("Bacterial endemic indicator spcecies abundance") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.abundance.indic.physeq.plot)
#ggsave("./Figures/Bacterial_endemic_indicator_species_heatmap_Genus_May14.png", plot = Heatmap.abundance.indic.physeq.noGLC.plot, width = 12, height = 8)
Heatmap.abundance.indic.physeq.plot = plot_heatmap(abundance.indic.physeq, "PCoA", "bray", "Crust_type", "Genus", sample.order = "Crust_type", high="orange")+ ggtitle("Bacterial endemic indicator spcecies abundance") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.abundance.indic.physeq.plot)
#ggsave("./Figures/Bacterial_endemic_indicator_species_heatmap_Genus_May14.png", plot = Heatmap.abundance.indic.physeq.noGLC.plot, width = 12, height = 8)
Heatmap.abundance.indic.physeq.plot = plot_heatmap(abundance.indic.physeq, "PCoA", "bray", "Crust_type", "Genus", sample.order = "Crust_type", high="orangered")+ ggtitle("Bacterial endemic indicator spcecies abundance") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.abundance.indic.physeq.plot)
#ggsave("./Figures/Bacterial_endemic_indicator_species_heatmap_Genus_May14.png", plot = Heatmap.abundance.indic.physeq.noGLC.plot, width = 12, height = 8)
Heatmap.abundance.indic.physeq.plot = plot_heatmap(abundance.indic.physeq, "NMDS", "bray", "Crust_type", "Genus", sample.order = "Crust_type", high="orangered")+ ggtitle("Bacterial endemic indicator spcecies abundance") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.abundance.indic.physeq.plot)
#ggsave("./Figures/Bacterial_endemic_indicator_species_heatmap_Genus_May14.png", plot = Heatmap.abundance.indic.physeq.noGLC.plot, width = 12, height = 8)
Heatmap.physeq.prune.rarefy = prune_taxa(names(sort(taxa_sums(physeq.prune.rarefy),TRUE)[1:100]),physeq.prune.rarefy)
Heatmap.physeq.prune.rarefy.plot = plot_heatmap(Heatmap.physeq.prune.rarefy, "NMDS", "bray", "Crust_type", "Genus", sample.order = "Crust_type", high="orangered")+ ggtitle("Bacterial endemic indicator spcecies abundance") + theme(plot.title = element_text(hjust = 0.5))
print(.Heatmap.physeq.prune.rarefy.plot)
Heatmap.physeq.prune.rarefy.plot = plot_heatmap(Heatmap.physeq.prune.rarefy, "NMDS", "bray", "Crust_type", "Genus", sample.order = "Crust_type", high="orangered")+ ggtitle("Bacterial endemic indicator spcecies abundance") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.physeq.prune.rarefy.plot)
Heatmap.physeq.prune.rarefy.plot = plot_heatmap(Heatmap.physeq.prune.rarefy, "NMDS", "bray", "Crust_type", "Genus", sample.order = "Crust_type", high="orange")+ ggtitle("Bacterial endemic indicator spcecies abundance") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.physeq.prune.rarefy.plot)
Heatmap.physeq.prune.rarefy.plot = plot_heatmap(Heatmap.physeq.prune.rarefy, "NMDS", "bray", "Crust_type", "Genus", sample.order = "Crust_type", high="darkorange")+ ggtitle("Bacterial endemic indicator spcecies abundance") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.physeq.prune.rarefy.plot)
Heatmap.physeq.prune.rarefy = prune_taxa(names(sort(taxa_sums(physeq.prune.rarefy),TRUE)[1:50]),physeq.prune.rarefy)
Heatmap.physeq.prune.rarefy.plot = plot_heatmap(Heatmap.physeq.prune.rarefy, "NMDS", "bray", "Crust_type", "Genus", sample.order = "Crust_type", high="darkorange")+ ggtitle("Bacterial endemic indicator spcecies abundance") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.physeq.prune.rarefy.plot)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",
header=TRUE,row.names=1,
sep="\t",stringsAsFactors=FALSE)
sampleData <- sample_data(meta)
physeq = phyloseq(OTU,TAX,sampleData,tree)
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 5, physeq)
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(711)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 37435, replace = FALSE, trimOTUs = TRUE)
physeq.prune.rarefy
Heatmap.physeq.prune.rarefy = prune_taxa(names(sort(taxa_sums(physeq.prune.rarefy),TRUE)[1:50]),physeq.prune.rarefy)
Heatmap.physeq.prune.rarefy.plot = plot_heatmap(Heatmap.physeq.prune.rarefy, "NMDS", "bray", "Crust_type", "Genus", sample.order = "Crust_type", high="darkorange")+ ggtitle("Bacterial endemic indicator spcecies abundance") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.physeq.prune.rarefy.plot)
Heatmap.physeq.prune.rarefy.plot = plot_heatmap(Heatmap.physeq.prune.rarefy, "PCoA", "bray", "Crust_type", "Genus", sample.order = "Crust_type", high="darkorange")+ ggtitle("Bacterial endemic indicator spcecies abundance") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.physeq.prune.rarefy.plot)
Heatmap.physeq.prune.rarefy.plot = plot_heatmap(Heatmap.physeq.prune.rarefy, "PCoA", "bray", "Layer", "Genus", sample.order = "Layer", high="darkorange")+ ggtitle("Bacterial endemic indicator spcecies abundance") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.physeq.prune.rarefy.plot)
Heatmap.physeq.prune.rarefy = prune_taxa(names(sort(taxa_sums(physeq.prune.rarefy),TRUE)[1:500]),physeq.prune.rarefy)
Heatmap.physeq.prune.rarefy.plot = plot_heatmap(Heatmap.physeq.prune.rarefy, "PCoA", "bray", "Layer", "Genus", sample.order = "Layer", high="darkorange")+ ggtitle("Bacterial endemic indicator spcecies abundance") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.physeq.prune.rarefy.plot)
Heatmap.physeq.prune.rarefy = prune_taxa(names(sort(taxa_sums(physeq.prune.rarefy),TRUE)[1:28]),physeq.prune.rarefy)
Heatmap.physeq.prune.rarefy.plot = plot_heatmap(Heatmap.physeq.prune.rarefy, "PCoA", "bray", "Layer", "Genus", sample.order = "Layer", high="darkorange")+ ggtitle("Bacterial endemic indicator spcecies abundance") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.physeq.prune.rarefy.plot)
Heatmap.physeq.prune.rarefy.plot = plot_heatmap(Heatmap.physeq.prune.rarefy, "PCoA", "unifrac", "Layer", "Genus", sample.order = "Layer", high="darkorange")+ ggtitle("Bacterial endemic indicator spcecies abundance") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.physeq.prune.rarefy.plot)
