FGtaxmat
colnames(FGtaxmat)
colnames(FG)
FGtaxmat <- dplyr::select(FG, OTU.ID, Taxonomy, Confidence.Ranking, Trophic.Mode, Guild, Growth.Morphology)
FGtaxmat <- as(as.matrix(FGtaxmat),"matrix")
FGTAX = tax_table(FGtaxmat)
indic.physeq = phyloseq(indic.OTU,FGTAX,indic.sampleData)
indic.physeq
indic.physeq.TAX = tax_table(indic.physeq)
indic.physeq.OTU.Tax.tab = merge(indvalsummary,indic.physeq.TAX,by=0,all=TRUE)
indic.physeq.OTU.Tax.tab
write.csv(indic.physeq.OTU.Tax.tab, file="FunGuilds.indvalsummary.site.Mojave.csv")
write.csv(indic.physeq.OTU.Tax.tab, file="FunGuilds.indvalsummary.site.Mojave.csv")
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(vegan)
library(plyr)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(magrittr)
library(ggplot2)
library(ggpubr)
library(data.table)
library(tidyr)
library(labdsv)
otus <- read.table("MC2018FC.otu_table.txt",header=T,sep="\t",row.names=1)
otumat <- as(as.matrix(otus), "matrix")
OTU = otu_table(otumat, taxa_are_rows = TRUE)
taxmat <- read.table("MC2018FC.taxonomy.fix.txt", header=T,sep="\t",row.names=1)
taxmat <- as(as.matrix(taxmat),"matrix")
TAX = tax_table(taxmat)
treefile = "MC2018FC.tree.phy"
tree = read.tree(treefile)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",header=TRUE,row.names=1,sep="\t",stringsAsFactors=FALSE)
meta = meta[which(meta$Layer %in% c("Surface")),]
head(meta)
sampleData <- sample_data(meta)
physeq = phyloseq(OTU,TAX,sampleData,tree)
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 1, physeq)
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(711)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 31107, replace = FALSE, trimOTUs = TRUE)
physeq.prune.rarefy
#Bac.physeq.prune.rarefy = subset_taxa(physeq.prune.rarefy, Kingdom != "Rhizaria")
#Bac.physeq.prune.rarefy = subset_taxa(Bac.physeq.prune.rarefy, Kingdom != "Chromista")
#Bac.physeq.prune.rarefy = subset_taxa(Bac.physeq.prune.rarefy, Kingdom != "Unassigned")
Fun.physeq.prune.rarefy = subset_taxa(physeq.prune.rarefy, Kingdom == "Fungi")
Fun.physeq.prune.rarefy
Fun.physeq.prune.rarefy
phyloGlom = tax_glom(Fun.physeq.prune.rarefy,taxrank = "Species")
phyloGlom
tax_table(phyloGlom)
glomTax = tax_table(phyloGlom)[,"OUT.ID"]
glomOTU = otu_table(phyloGlom)
glomTable = merge(glomOTU,glomTax,by=0,all=TRUE)
head(glomTable)
glomTax = tax_table(phyloGlom)[,"OTU.ID"]
glomTax = tax_table(phyloGlom)[,"OTU.ID"]
glomTax = tax_table(phyloGlom)[,"OUT.ID"]
glomOTU = otu_table(phyloGlom)
glomTable = merge(glomOTU,glomTax,by=0,all=TRUE)
head(glomTable)
rownames(glomTable) = glomTable[,"OUT.ID"]
glomTable$Row.names = NULL
glomTable$OUT.ID = NULL
head(glomTable)
glomTax = tax_table(phyloGlom)[,"OUT.ID"]
glomTax
glomTax = tax_table(phyloGlom)[,"OTUs.ID"]
glomTax = tax_table(phyloGlom)[,"OTU.ID"]
glomTax = tax_table(phyloGlom)[,"OUT.ID"]
glomTax
ASV = t(glomTable)
ASV.no0 = ASV[, colSums(ASV != 0) > 0]
ASV.no0
Crust_type.Mojave = subset(sampleData,select = "Crust_type")
class(sampleData$Site_)
class(sampleData$Site)
sampleData$Crust_type
class(sampleData$Site_layer)
Crust_type.Mojave$Crust_type = as.numeric(as.factor(Crust_type.Mojave$Crust_type))
Crust_type.Mojave$Crust_type
Crust_type.Mojave.indic = indval(ASV.no0,Crust_type.Mojave$Crust_type)
summary(Crust_type.Mojave.indic, p = 0.05, type = "short")
summary(Crust_type.Mojave.indic, p = 0.05, type = "long")
Crust_type.Mojave.indic$indval
Crust_type.Mojave.indic$indcls
gr <- Crust_type.Mojave.indic$maxcls[Crust_type.Mojave.indic$pval<=0.05]
iv <- Crust_type.Mojave.indic$indcls[Crust_type.Mojave.indic$pval<=0.05]
pv <- Crust_type.Mojave.indic$pval[Crust_type.Mojave.indic$pval<=0.05]
fr <- apply(ASV.no0[,-1]>0, 2, sum)[Crust_type.Mojave.indic$pval<=0.05]
indvalsummary <- data.frame(group=gr, indval=iv, pvalue=pv, freq=fr)
indvalsummary <- indvalsummary[order(indvalsummary$group, -indvalsummary$indval),]
indvalsummary
Crust_type.Mojave.indic.indval = as.data.frame(Crust_type.Mojave.indic$indval)
Crust_type.Mojave.indic.indval
Crust_type.Mojave.indic.indval_filtered = Crust_type.Mojave.indic.indval[row.names(Crust_type.Mojave.indic.indval) %in% row.names(indvalsummary),]
Crust_type.Mojave.indic.indval_filtered
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "1"] <- "CLC"
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "2"] <- "GLC"
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "3"] <- "LAC"
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "4"] <- "RMC"
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "5"] <- "SMC"
head(Crust_type.Mojave.indic.indval_filtered)
indic.otumat <- as(as.matrix(Crust_type.Mojave.indic.indval_filtered), "matrix")
indic.OTU = otu_table(indic.otumat, taxa_are_rows = TRUE)
head(indic.OTU)
indic.meta = read.table("Fun.indic.meta.tsv",
header=TRUE,row.names=1,
sep="\t",stringsAsFactors=FALSE)
indic.sampleData <- sample_data(indic.meta)
indic.physeq = phyloseq(indic.OTU,TAX,indic.sampleData)
indic.physeq
sample_data(indic.physeq)$Crust_type = factor(sample_data(indic.physeq)$Crust_type, levels = c("LAC", "CLC", "GLC", "RMC", "SMC"))
indic.physeq.TAX = tax_table(indic.physeq)
indic.physeq.OTU.Tax.tab = merge(indvalsummary,indic.physeq.TAX,by=0,all=TRUE)
indic.physeq.OTU.Tax.tab
Heatmap.indic.physeq = prune_taxa(names(sort(taxa_sums(indic.physeq),TRUE)[1:65]),indic.physeq)
Heatmap.indic.physeq.plot = plot_heatmap(Heatmap.indic.physeq, "PCoA", "bray", sample.label = NULL ,"Genus", sample.order = c("LAC", "CLC", "GLC", "RMC", "SMC"))+ ggtitle("Bacterial indicator species heatmap (P < 0.05)") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.indic.physeq.plot)
ggsave("./Figures/Heatmap_indicator_species_Genuslevel_0.05P.png", plot = Heatmap.indic.physeq.plot, width = 12, height = 8)
indic.TAX = tax_table(indic.physeq)
otu <- read.table("MojaveBacQ2FWLE.otu_table.fix.txt",header=T,sep="\t")
otu <- read.table("MC2018FC.otu_table.txt",header=T,sep="\t")
otus.filtered = otu[otu$OTU.ID %in% OTU_SF_merge_crust_type_endemic_df$OTUendemic,]
Crust_type.Mojave = subset(sampleData,select = "Site")
sampleData$Site
Crust_type.Mojave = subset(sampleData,select = "Site")
sampleData$Site
Crust_type.Mojave$Site = as.numeric(as.factor(Site.Mojave$Site))
Crust_type.Mojave$Site = as.numeric(as.factor(Crust_type.Mojave$Site))
Crust_type.Mojave$Site
Crust_type.Mojave.indic = indval(ASV.no0,Crust_type.Mojave$Site)
summary(Crust_type.Mojave.indic, p = 0.05, type = "short")
summary(Crust_type.Mojave.indic, p = 0.05, type = "long")
Crust_type.Mojave.indic$indval
Crust_type.Mojave.indic$indcls
gr <- Crust_type.Mojave.indic$maxcls[Crust_type.Mojave.indic$pval<=0.05]
iv <- Crust_type.Mojave.indic$indcls[Crust_type.Mojave.indic$pval<=0.05]
pv <- Crust_type.Mojave.indic$pval[Crust_type.Mojave.indic$pval<=0.05]
fr <- apply(ASV.no0[,-1]>0, 2, sum)[Crust_type.Mojave.indic$pval<=0.05]
indvalsummary <- data.frame(group=gr, indval=iv, pvalue=pv, freq=fr)
indvalsummary <- indvalsummary[order(indvalsummary$group, -indvalsummary$indval),]
indvalsummary
Crust_type.Mojave.indic.indval = as.data.frame(Crust_type.Mojave.indic$indval)
Crust_type.Mojave.indic.indval
Crust_type.Mojave.indic.indval_filtered = Crust_type.Mojave.indic.indval[row.names(Crust_type.Mojave.indic.indval) %in% row.names(indvalsummary),]
Crust_type.Mojave.indic.indval_filtered
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "1"] <- "CIMA"
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "2"] <- "GMT"
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "3"] <- "JTNP"
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "4"] <- "KELSO"
head(Crust_type.Mojave.indic.indval_filtered)
indic.otumat <- as(as.matrix(Crust_type.Mojave.indic.indval_filtered), "matrix")
indic.OTU = otu_table(indic.otumat, taxa_are_rows = TRUE)
head(indic.OTU)
indic.meta = read.table("Fun.indic.meta.tsv",
header=TRUE,row.names=1,
sep="\t",stringsAsFactors=FALSE)
indic.meta
indic.meta = read.table("Fun.indic.meta.site.tsv",
header=TRUE,row.names=1,
sep="\t",stringsAsFactors=FALSE)
indic.meta
indic.sampleData <- sample_data(indic.meta)
indic.physeq = phyloseq(indic.OTU,TAX,indic.sampleData)
indic.physeq
indic.physeq.TAX = tax_table(indic.physeq)
indic.physeq.OTU.Tax.tab = merge(indvalsummary,indic.physeq.TAX,by=0,all=TRUE)
indic.physeq.OTU.Tax.tab
write.csv(indic.physeq.OTU.Tax.tab, file="Fun.indvalsummary.crusttype.Mojave.csv")
Heatmap.indic.physeq = prune_taxa(names(sort(taxa_sums(indic.physeq),TRUE)[1:65]),indic.physeq)
Heatmap.indic.physeq.plot = plot_heatmap(Heatmap.indic.physeq, "PCoA", "bray", sample.label = NULL ,"Genus", sample.order = c("LAC", "CLC", "GLC", "RMC", "SMC"))+ ggtitle("Bacterial indicator species heatmap (P < 0.05)") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.indic.physeq.plot)
indic.physeq
indic.physeq
sample_data(indic.physeq)
Heatmap.indic.physeq.plot = plot_heatmap(Heatmap.indic.physeq, "PCoA", "bray", "Site" ,"Genus", sample.order = c("LAC", "CLC", "GLC", "RMC", "SMC"))+ ggtitle("Bacterial indicator species heatmap (P < 0.05)") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.indic.physeq.plot)
Heatmap.indic.physeq.plot = plot_heatmap(Heatmap.indic.physeq, "PCoA", "bray", sample.label = NULL ,"Genus")+ ggtitle("Bacterial indicator species heatmap (P < 0.05)") + theme(plot.title = element_text(hjust = 0.5))
print(Heatmap.indic.physeq.plot)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(vegan)
library(plyr)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(magrittr)
library(ggplot2)
library(ggpubr)
library(data.table)
library(tidyr)
library(labdsv)
otus <- read.table("MC2018FC.otu_table.txt",header=T,sep="\t",row.names=1)
otumat <- as(as.matrix(otus), "matrix")
OTU = otu_table(otumat, taxa_are_rows = TRUE)
taxmat <- read.table("MC2018FC.taxonomy.fix.txt", header=T,sep="\t",row.names=1)
taxmat <- as(as.matrix(taxmat),"matrix")
TAX = tax_table(taxmat)
treefile = "MC2018FC.tree.phy"
tree = read.tree(treefile)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",header=TRUE,row.names=1,sep="\t",stringsAsFactors=FALSE)
meta = meta[which(meta$Layer %in% c("Surface")),]
head(meta)
sampleData <- sample_data(meta)
physeq = phyloseq(OTU,TAX,sampleData,tree)
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 1, physeq)
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(711)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 31107, replace = FALSE, trimOTUs = TRUE)
physeq.prune.rarefy
#Bac.physeq.prune.rarefy = subset_taxa(physeq.prune.rarefy, Kingdom != "Rhizaria")
#Bac.physeq.prune.rarefy = subset_taxa(Bac.physeq.prune.rarefy, Kingdom != "Chromista")
#Bac.physeq.prune.rarefy = subset_taxa(Bac.physeq.prune.rarefy, Kingdom != "Unassigned")
Fun.physeq.prune.rarefy = subset_taxa(physeq.prune.rarefy, Kingdom == "Fungi")
Fun.physeq.prune.rarefy
Bac.physeq.prune.rarefy
Fun.physeq.prune.rarefy
phyloGlom = tax_glom(Fun.physeq.prune.rarefy,taxrank = "Species")
phyloGlom
#phyloGlom = subset_taxa(phyloGlom, Phylum == "D_1__Cyanobacteria")
tax_table(phyloGlom)
glomTax = tax_table(phyloGlom)[,"OUT.ID"]
glomTax
glomOTU = otu_table(phyloGlom)
glomTable = merge(glomOTU,glomTax,by=0,all=TRUE)
head(glomTable)
rownames(glomTable) = glomTable[,"OUT.ID"]
glomTable$Row.names = NULL
glomTable$OUT.ID = NULL
head(glomTable)
ASV = t(glomTable)
ASV.no0 = ASV[, colSums(ASV != 0) > 0]
ASV.no0
Crust_type.Mojave = subset(sampleData,select = "Site")
class(sampleData$Site_layer)
sampleData$Site
Crust_type.Mojave$Site = as.numeric(as.factor(Crust_type.Mojave$Site))
Crust_type.Mojave$Site
Crust_type.Mojave.indic = indval(ASV.no0,Crust_type.Mojave$Site)
summary(Crust_type.Mojave.indic, p = 0.05, type = "short")
summary(Crust_type.Mojave.indic, p = 0.05, type = "short")
Crust_type.Mojave.indic = indval(ASV.no0,Crust_type.Mojave$Site)
summary(Crust_type.Mojave.indic, p = 0.05, type = "short")
Crust_type.Mojave.indic = indval(ASV.no0,Crust_type.Mojave$Site)
summary(Crust_type.Mojave.indic, p = 0.05, type = "short")
Crust_type.Mojave = subset(sampleData,select = "Crust_type")
Crust_type.Mojave$Crust_type = as.numeric(as.factor(Crust_type.Mojave$Crust_type))
Crust_type.Mojave$Crust_type
sampleData$Crust_type
Crust_type.Mojave.indic = indval(ASV.no0,Crust_type.Mojave$Crust_type)
summary(Crust_type.Mojave.indic, p = 0.05, type = "short")
summary(Crust_type.Mojave.indic, p = 0.05, type = "long")
Crust_type.Mojave.indic$indval
Crust_type.Mojave.indic$indcls
gr <- Crust_type.Mojave.indic$maxcls[Crust_type.Mojave.indic$pval<=0.05]
iv <- Crust_type.Mojave.indic$indcls[Crust_type.Mojave.indic$pval<=0.05]
pv <- Crust_type.Mojave.indic$pval[Crust_type.Mojave.indic$pval<=0.05]
fr <- apply(ASV.no0[,-1]>0, 2, sum)[Crust_type.Mojave.indic$pval<=0.05]
indvalsummary <- data.frame(group=gr, indval=iv, pvalue=pv, freq=fr)
indvalsummary <- indvalsummary[order(indvalsummary$group, -indvalsummary$indval),]
indvalsummary
Crust_type.Mojave.indic.indval = as.data.frame(Crust_type.Mojave.indic$indval)
Crust_type.Mojave.indic.indval
Crust_type.Mojave.indic.indval_filtered = Crust_type.Mojave.indic.indval[row.names(Crust_type.Mojave.indic.indval) %in% row.names(indvalsummary),]
Crust_type.Mojave.indic.indval_filtered
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "1"] <- "CLC"
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "2"] <- "GLC"
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "3"] <- "LAC"
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "4"] <- "RMC"
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "5"] <- "SMC"
head(Crust_type.Mojave.indic.indval_filtered)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(vegan)
library(plyr)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(magrittr)
library(ggplot2)
library(ggpubr)
library(data.table)
library(tidyr)
library(labdsv)
otus <- read.table("MC2018FC.otu_table.txt",header=T,sep="\t",row.names=1)
otumat <- as(as.matrix(otus), "matrix")
OTU = otu_table(otumat, taxa_are_rows = TRUE)
taxmat <- read.table("MC2018FC.taxonomy.fix.txt", header=T,sep="\t",row.names=1)
taxmat <- as(as.matrix(taxmat),"matrix")
TAX = tax_table(taxmat)
treefile = "MC2018FC.tree.phy"
tree = read.tree(treefile)
meta = read.table("Mojave_mappingfile_8-Aug-2018.txt",header=TRUE,row.names=1,sep="\t",stringsAsFactors=FALSE)
head(meta)
sampleData <- sample_data(meta)
physeq = phyloseq(OTU,TAX,sampleData,tree)
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 1, physeq)
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(711)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 10000, replace = FALSE, trimOTUs = TRUE)
physeq.prune.rarefy
#Bac.physeq.prune.rarefy = subset_taxa(physeq.prune.rarefy, Kingdom != "Rhizaria")
#Bac.physeq.prune.rarefy = subset_taxa(Bac.physeq.prune.rarefy, Kingdom != "Chromista")
#Bac.physeq.prune.rarefy = subset_taxa(Bac.physeq.prune.rarefy, Kingdom != "Unassigned")
Fun.physeq.prune.rarefy = subset_taxa(physeq.prune.rarefy, Kingdom == "Fungi")
Fun.physeq.prune.rarefy
Fun.physeq.prune.rarefy
phyloGlom = tax_glom(Fun.physeq.prune.rarefy,taxrank = "Species")
phyloGlom
glomTax = tax_table(phyloGlom)[,"OUT.ID"]
glomTax
glomOTU = otu_table(phyloGlom)
glomTable = merge(glomOTU,glomTax,by=0,all=TRUE)
head(glomTable)
rownames(glomTable) = glomTable[,"OUT.ID"]
glomTable$Row.names = NULL
glomTable$OUT.ID = NULL
head(glomTable)
ASV = t(glomTable)
ASV.no0 = ASV[, colSums(ASV != 0) > 0]
ASV.no0
Crust_type.Mojave = subset(sampleData,select = "Layer")
class(sampleData$Layer)
sampleData$Layer
meta = read.table("Mojave_mappingfile_8-Sep-2018.txt",header=TRUE,row.names=1,sep="\t",stringsAsFactors=FALSE)
sampleData <- sample_data(meta)
physeq = phyloseq(OTU,TAX,sampleData,tree)
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 1, physeq)
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(711)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 10000, replace = FALSE, trimOTUs = TRUE)
physeq.prune.rarefy
#Bac.physeq.prune.rarefy = subset_taxa(physeq.prune.rarefy, Kingdom != "Rhizaria")
#Bac.physeq.prune.rarefy = subset_taxa(Bac.physeq.prune.rarefy, Kingdom != "Chromista")
#Bac.physeq.prune.rarefy = subset_taxa(Bac.physeq.prune.rarefy, Kingdom != "Unassigned")
Fun.physeq.prune.rarefy = subset_taxa(physeq.prune.rarefy, Kingdom == "Fungi")
Fun.physeq.prune.rarefy
Bac.physeq.prune.rarefy
Fun.physeq.prune.rarefy
phyloGlom = tax_glom(Fun.physeq.prune.rarefy,taxrank = "Species")
phyloGlom
glomTax = tax_table(phyloGlom)[,"OUT.ID"]
#glomTax
glomOTU = otu_table(phyloGlom)
glomTable = merge(glomOTU,glomTax,by=0,all=TRUE)
head(glomTable)
rownames(glomTable) = glomTable[,"OUT.ID"]
glomTable$Row.names = NULL
glomTable$OUT.ID = NULL
ASV = t(glomTable)
ASV.no0 = ASV[, colSums(ASV != 0) > 0]
ASV.no0
Crust_type.Mojave = subset(sampleData,select = "Layer")
class(sampleData$Layer)
sampleData$Layer
Crust_type.Mojave$Crust_type = as.numeric(as.factor(Crust_type.Mojave$Crust_type))
Crust_type.Mojave$Layer = as.numeric(as.factor(Crust_type.Mojave$Layer))
Crust_type.Mojave$Layer
Crust_type.Mojave.indic = indval(ASV.no0,Crust_type.Mojave$Layer)
summary(Crust_type.Mojave.indic, p = 0.05, type = "short")
summary(Crust_type.Mojave.indic, p = 0.05, type = "long")
Crust_type.Mojave.indic$indval
gr <- Crust_type.Mojave.indic$maxcls[Crust_type.Mojave.indic$pval<=0.05]
iv <- Crust_type.Mojave.indic$indcls[Crust_type.Mojave.indic$pval<=0.05]
pv <- Crust_type.Mojave.indic$pval[Crust_type.Mojave.indic$pval<=0.05]
fr <- apply(ASV.no0[,-1]>0, 2, sum)[Crust_type.Mojave.indic$pval<=0.05]
indvalsummary <- data.frame(group=gr, indval=iv, pvalue=pv, freq=fr)
indvalsummary <- indvalsummary[order(indvalsummary$group, -indvalsummary$indval),]
Crust_type.Mojave.indic.indval = as.data.frame(Crust_type.Mojave.indic$indval)
Crust_type.Mojave.indic.indval
Crust_type.Mojave.indic.indval_filtered = Crust_type.Mojave.indic.indval[row.names(Crust_type.Mojave.indic.indval) %in% row.names(indvalsummary),]
Crust_type.Mojave.indic.indval_filtered
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "1"] <- "Subsurface"
names(Crust_type.Mojave.indic.indval_filtered)[names(Crust_type.Mojave.indic.indval_filtered) == "2"] <- "Surface"
head(Crust_type.Mojave.indic.indval_filtered)
indic.otumat <- as(as.matrix(Crust_type.Mojave.indic.indval_filtered), "matrix")
indic.OTU = otu_table(indic.otumat, taxa_are_rows = TRUE)
head(indic.OTU)
indic.meta = read.table("Fun.indic.meta.layer.tsv",
header=TRUE,row.names=1,
sep="\t",stringsAsFactors=FALSE)
indic.meta
indic.sampleData <- sample_data(indic.meta)
indic.physeq = phyloseq(indic.OTU,TAX,indic.sampleData)
indic.physeq
indic.physeq.TAX = tax_table(indic.physeq)
indic.physeq.OTU.Tax.tab = merge(indvalsummary,indic.physeq.TAX,by=0,all=TRUE)
indic.physeq.OTU.Tax.tab
write.csv(indic.physeq.OTU.Tax.tab, file="Fun.indvalsummary.layer.Mojave.csv")
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(vegan)
library(plyr)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(magrittr)
library(ggplot2)
library(ggpubr)
library(data.table)
library(tidyr)
library(labdsv)
otus <- read.table("MC2018FC.otu_table.txt",header=T,sep="\t",row.names=1)
otumat <- as(as.matrix(otus), "matrix")
OTU = otu_table(otumat, taxa_are_rows = TRUE)
taxmat <- read.table("MC2018FC.taxonomy.fix.txt", header=T,sep="\t",row.names=1)
taxmat <- as(as.matrix(taxmat),"matrix")
TAX = tax_table(taxmat)
treefile = "MC2018FC.tree.phy"
tree = read.tree(treefile)
meta = read.table("Mojave_mappingfile_8-Sep-2018.txt",header=TRUE,row.names=1,sep="\t",stringsAsFactors=FALSE)
sampleData <- sample_data(meta)
physeq = phyloseq(OTU,TAX,sampleData,tree)
physeq
physeq.prune = prune_taxa(taxa_sums(physeq) > 1, physeq)
readcount = data.table(as(sample_data(physeq.prune), "data.frame"),
TotalReads = sample_sums(physeq.prune),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
#For plotting, use command below.
#SeqDepth = ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
readcount = readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")]
head(readcount)
set.seed(711)
physeq.prune.rarefy = rarefy_even_depth(physeq.prune, sample.size = 6842, replace = FALSE, trimOTUs = TRUE)
physeq.prune.rarefy
#Bac.physeq.prune.rarefy = subset_taxa(physeq.prune.rarefy, Kingdom != "Rhizaria")
#Bac.physeq.prune.rarefy = subset_taxa(Bac.physeq.prune.rarefy, Kingdom != "Chromista")
#Bac.physeq.prune.rarefy = subset_taxa(Bac.physeq.prune.rarefy, Kingdom != "Unassigned")
Fun.physeq.prune.rarefy = subset_taxa(physeq.prune.rarefy, Kingdom == "Fungi")
Fun.physeq.prune.rarefy
Fun.physeq.prune.rarefy
phyloGlom = tax_glom(Fun.physeq.prune.rarefy,taxrank = "Species")
phyloGlom
glomTax = tax_table(phyloGlom)[,"OUT.ID"]
#glomTax
glomOTU = otu_table(phyloGlom)
glomTable = merge(glomOTU,glomTax,by=0,all=TRUE)
head(glomTable)
rownames(glomTable) = glomTable[,"OUT.ID"]
glomTable$Row.names = NULL
glomTable$OUT.ID = NULL
ASV = t(glomTable)
ASV.no0 = ASV[, colSums(ASV != 0) > 0]
ASV.no0
Crust_type.Mojave = subset(sampleData,select = "Layer")
class(sampleData$Layer)
sampleData$Layer
Crust_type.Mojave$Layer = as.numeric(as.factor(Crust_type.Mojave$Layer))
Crust_type.Mojave$Layer
Crust_type.Mojave.indic = indval(ASV.no0,Crust_type.Mojave$Layer)
summary(Crust_type.Mojave.indic, p = 0.05, type = "short")
summary(Crust_type.Mojave.indic, p = 0.05, type = "short")
Crust_type.Mojave.indic = indval(ASV.no0,Crust_type.Mojave$Layer)
summary(Crust_type.Mojave.indic, p = 0.05, type = "short")
Crust_type.Mojave.indic = indval(ASV.no0,Crust_type.Mojave$Layer)
summary(Crust_type.Mojave.indic, p = 0.05, type = "short")
Crust_type.Mojave.indic = indval(ASV.no0,Crust_type.Mojave$Layer)
summary(Crust_type.Mojave.indic, p = 0.05, type = "short")
summary(Crust_type.Mojave.indic, p = 0.05, type = "long")
Crust_type.Mojave.indic$indval
Crust_type.Mojave.indic$indcls
gr <- Crust_type.Mojave.indic$maxcls[Crust_type.Mojave.indic$pval<=0.05]
iv <- Crust_type.Mojave.indic$indcls[Crust_type.Mojave.indic$pval<=0.05]
pv <- Crust_type.Mojave.indic$pval[Crust_type.Mojave.indic$pval<=0.05]
fr <- apply(ASV.no0[,-1]>0, 2, sum)[Crust_type.Mojave.indic$pval<=0.05]
indvalsummary <- data.frame(group=gr, indval=iv, pvalue=pv, freq=fr)
indvalsummary <- indvalsummary[order(indvalsummary$group, -indvalsummary$indval),]
indvalsummary
